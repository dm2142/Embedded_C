
ARM_SVC_SupervisorCall.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012d4  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b8  080014a4  080014a4  000114a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800155c  0800155c  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  0800155c  0800155c  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800155c  0800155c  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800155c  0800155c  0001155c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001560  08001560  00011560  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08001564  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  080015c0  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  080015c0  000201c8  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020086  2**0
                  CONTENTS, READONLY
 13 .debug_info   000009c5  00000000  00000000  000200c9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000373  00000000  00000000  00020a8e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000128  00000000  00000000  00020e08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000cb  00000000  00000000  00020f30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002cae  00000000  00000000  00020ffb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000014ba  00000000  00000000  00023ca9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000097de  00000000  00000000  00025163  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000b7c  00000000  00000000  0002e944  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006e  00000000  00000000  0002f4c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	2000005c 	.word	0x2000005c
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800148c 	.word	0x0800148c

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000060 	.word	0x20000060
 800020c:	0800148c 	.word	0x0800148c

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b082      	sub	sp, #8
 80002b4:	af00      	add	r7, sp, #0
	// R0 contains the first operand
	__asm volatile ("LDR R0, =#20");
 80002b6:	f04f 0014 	mov.w	r0, #20
	// R1 Contains the second operand
	__asm volatile ("LDR R1, =#25");
 80002ba:	f04f 0119 	mov.w	r1, #25

	// Call the Supervisor Call to change to Handler Mode.
	__asm volatile("SVC #36");
 80002be:	df24      	svc	36	; 0x24

	// When return from handler mode (SVC Handler) to thread mode, the processor loads the stack frame load before entry in Handler mode.
	uint32_t data;
	__asm volatile("MOV %0, R0": "=r"(data) ::);
 80002c0:	4603      	mov	r3, r0
 80002c2:	607b      	str	r3, [r7, #4]

	printf("The result is: %ld \n", data);
 80002c4:	6879      	ldr	r1, [r7, #4]
 80002c6:	4802      	ldr	r0, [pc, #8]	; (80002d0 <main+0x20>)
 80002c8:	f000 fa18 	bl	80006fc <iprintf>

	for(;;);
 80002cc:	e7fe      	b.n	80002cc <main+0x1c>
 80002ce:	bf00      	nop
 80002d0:	080014a4 	.word	0x080014a4

080002d4 <SVC_Handler>:


__attribute ((naked)) void SVC_Handler(void){

	// Extract the address of stacking when an exception occurs and load into R0.
	__asm volatile ("MRS R0, MSP");
 80002d4:	f3ef 8008 	mrs	r0, MSP
	// Call the SVC_Handler_c function, the register R0 contains the stacking address.
	__asm volatile ("B SVC_Handler_c");
 80002d8:	f000 b802 	b.w	80002e0 <SVC_Handler_c>

}
 80002dc:	bf00      	nop
	...

080002e0 <SVC_Handler_c>:

void SVC_Handler_c(uint32_t * pBaseStackFrame){
 80002e0:	b580      	push	{r7, lr}
 80002e2:	b086      	sub	sp, #24
 80002e4:	af00      	add	r7, sp, #0
 80002e6:	6078      	str	r0, [r7, #4]

	printf("in SVC Handler \n");
 80002e8:	4826      	ldr	r0, [pc, #152]	; (8000384 <SVC_Handler_c+0xa4>)
 80002ea:	f000 fa6d 	bl	80007c8 <puts>
//
//	printf("The PC (program counter address) address is %p \n", pBaseStackFrame + 6);
//	printf("The PC (program counter address) value is 0x%lx \n", pBaseStackFrame[6]);

	// Get the opcode
	uint8_t* pReturnAddress = (uint8_t*) pBaseStackFrame[6];
 80002ee:	687b      	ldr	r3, [r7, #4]
 80002f0:	3318      	adds	r3, #24
 80002f2:	681b      	ldr	r3, [r3, #0]
 80002f4:	617b      	str	r3, [r7, #20]
	pReturnAddress -= 2;
 80002f6:	697b      	ldr	r3, [r7, #20]
 80002f8:	3b02      	subs	r3, #2
 80002fa:	617b      	str	r3, [r7, #20]

//	printf("The SVC caller address is %p \n", pReturnAddress);
//	printf("The SVC number is 0x%x \n", *pReturnAddress);

	uint8_t SVC_number = *pReturnAddress;
 80002fc:	697b      	ldr	r3, [r7, #20]
 80002fe:	781b      	ldrb	r3, [r3, #0]
 8000300:	74fb      	strb	r3, [r7, #19]
//	printf("The SVC number is %d \n", SVC_number);

	uint32_t a = *pBaseStackFrame;			// R0
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	681b      	ldr	r3, [r3, #0]
 8000306:	60fb      	str	r3, [r7, #12]
	uint32_t b = *(pBaseStackFrame + 1);	// R1
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	685b      	ldr	r3, [r3, #4]
 800030c:	60bb      	str	r3, [r7, #8]

	switch (SVC_number) {
 800030e:	7cfb      	ldrb	r3, [r7, #19]
 8000310:	3b24      	subs	r3, #36	; 0x24
 8000312:	2b03      	cmp	r3, #3
 8000314:	d830      	bhi.n	8000378 <SVC_Handler_c+0x98>
 8000316:	a201      	add	r2, pc, #4	; (adr r2, 800031c <SVC_Handler_c+0x3c>)
 8000318:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800031c:	0800032d 	.word	0x0800032d
 8000320:	0800033f 	.word	0x0800033f
 8000324:	08000351 	.word	0x08000351
 8000328:	08000365 	.word	0x08000365
		case 36:
			printf("Addition selected \n");
 800032c:	4816      	ldr	r0, [pc, #88]	; (8000388 <SVC_Handler_c+0xa8>)
 800032e:	f000 fa4b 	bl	80007c8 <puts>
			*pBaseStackFrame = a + b;
 8000332:	68fa      	ldr	r2, [r7, #12]
 8000334:	68bb      	ldr	r3, [r7, #8]
 8000336:	441a      	add	r2, r3
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	601a      	str	r2, [r3, #0]
			break;
 800033c:	e01d      	b.n	800037a <SVC_Handler_c+0x9a>
		case 37:
			printf("Subtraction selected \n");
 800033e:	4813      	ldr	r0, [pc, #76]	; (800038c <SVC_Handler_c+0xac>)
 8000340:	f000 fa42 	bl	80007c8 <puts>
			*pBaseStackFrame = a - b;
 8000344:	68fa      	ldr	r2, [r7, #12]
 8000346:	68bb      	ldr	r3, [r7, #8]
 8000348:	1ad2      	subs	r2, r2, r3
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	601a      	str	r2, [r3, #0]
			break;
 800034e:	e014      	b.n	800037a <SVC_Handler_c+0x9a>
		case 38:
			printf("Multiplication selected \n");
 8000350:	480f      	ldr	r0, [pc, #60]	; (8000390 <SVC_Handler_c+0xb0>)
 8000352:	f000 fa39 	bl	80007c8 <puts>
			*pBaseStackFrame = a * b;
 8000356:	68fb      	ldr	r3, [r7, #12]
 8000358:	68ba      	ldr	r2, [r7, #8]
 800035a:	fb03 f202 	mul.w	r2, r3, r2
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	601a      	str	r2, [r3, #0]
			break;
 8000362:	e00a      	b.n	800037a <SVC_Handler_c+0x9a>
		case 39:
			printf("Division selected \n");
 8000364:	480b      	ldr	r0, [pc, #44]	; (8000394 <SVC_Handler_c+0xb4>)
 8000366:	f000 fa2f 	bl	80007c8 <puts>
			*pBaseStackFrame = a / b;
 800036a:	68fa      	ldr	r2, [r7, #12]
 800036c:	68bb      	ldr	r3, [r7, #8]
 800036e:	fbb2 f2f3 	udiv	r2, r2, r3
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	601a      	str	r2, [r3, #0]
			break;
 8000376:	e000      	b.n	800037a <SVC_Handler_c+0x9a>
		default:
			break;
 8000378:	bf00      	nop
	}

}
 800037a:	bf00      	nop
 800037c:	3718      	adds	r7, #24
 800037e:	46bd      	mov	sp, r7
 8000380:	bd80      	pop	{r7, pc}
 8000382:	bf00      	nop
 8000384:	080014bc 	.word	0x080014bc
 8000388:	080014cc 	.word	0x080014cc
 800038c:	080014e0 	.word	0x080014e0
 8000390:	080014f8 	.word	0x080014f8
 8000394:	08001514 	.word	0x08001514

08000398 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000398:	b480      	push	{r7}
 800039a:	b083      	sub	sp, #12
 800039c:	af00      	add	r7, sp, #0
 800039e:	4603      	mov	r3, r0
 80003a0:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80003a2:	4b0e      	ldr	r3, [pc, #56]	; (80003dc <ITM_SendChar+0x44>)
 80003a4:	681b      	ldr	r3, [r3, #0]
 80003a6:	4a0d      	ldr	r2, [pc, #52]	; (80003dc <ITM_SendChar+0x44>)
 80003a8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80003ac:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80003ae:	4b0c      	ldr	r3, [pc, #48]	; (80003e0 <ITM_SendChar+0x48>)
 80003b0:	681b      	ldr	r3, [r3, #0]
 80003b2:	4a0b      	ldr	r2, [pc, #44]	; (80003e0 <ITM_SendChar+0x48>)
 80003b4:	f043 0301 	orr.w	r3, r3, #1
 80003b8:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80003ba:	bf00      	nop
 80003bc:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80003c0:	681b      	ldr	r3, [r3, #0]
 80003c2:	f003 0301 	and.w	r3, r3, #1
 80003c6:	2b00      	cmp	r3, #0
 80003c8:	d0f8      	beq.n	80003bc <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80003ca:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80003ce:	79fb      	ldrb	r3, [r7, #7]
 80003d0:	6013      	str	r3, [r2, #0]
}
 80003d2:	bf00      	nop
 80003d4:	370c      	adds	r7, #12
 80003d6:	46bd      	mov	sp, r7
 80003d8:	bc80      	pop	{r7}
 80003da:	4770      	bx	lr
 80003dc:	e000edfc 	.word	0xe000edfc
 80003e0:	e0000e00 	.word	0xe0000e00

080003e4 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003e4:	b580      	push	{r7, lr}
 80003e6:	b086      	sub	sp, #24
 80003e8:	af00      	add	r7, sp, #0
 80003ea:	60f8      	str	r0, [r7, #12]
 80003ec:	60b9      	str	r1, [r7, #8]
 80003ee:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003f0:	2300      	movs	r3, #0
 80003f2:	617b      	str	r3, [r7, #20]
 80003f4:	e00a      	b.n	800040c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80003f6:	f3af 8000 	nop.w
 80003fa:	4601      	mov	r1, r0
 80003fc:	68bb      	ldr	r3, [r7, #8]
 80003fe:	1c5a      	adds	r2, r3, #1
 8000400:	60ba      	str	r2, [r7, #8]
 8000402:	b2ca      	uxtb	r2, r1
 8000404:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000406:	697b      	ldr	r3, [r7, #20]
 8000408:	3301      	adds	r3, #1
 800040a:	617b      	str	r3, [r7, #20]
 800040c:	697a      	ldr	r2, [r7, #20]
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	429a      	cmp	r2, r3
 8000412:	dbf0      	blt.n	80003f6 <_read+0x12>
  }

  return len;
 8000414:	687b      	ldr	r3, [r7, #4]
}
 8000416:	4618      	mov	r0, r3
 8000418:	3718      	adds	r7, #24
 800041a:	46bd      	mov	sp, r7
 800041c:	bd80      	pop	{r7, pc}

0800041e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800041e:	b580      	push	{r7, lr}
 8000420:	b086      	sub	sp, #24
 8000422:	af00      	add	r7, sp, #0
 8000424:	60f8      	str	r0, [r7, #12]
 8000426:	60b9      	str	r1, [r7, #8]
 8000428:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800042a:	2300      	movs	r3, #0
 800042c:	617b      	str	r3, [r7, #20]
 800042e:	e009      	b.n	8000444 <_write+0x26>
  {
//    __io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 8000430:	68bb      	ldr	r3, [r7, #8]
 8000432:	1c5a      	adds	r2, r3, #1
 8000434:	60ba      	str	r2, [r7, #8]
 8000436:	781b      	ldrb	r3, [r3, #0]
 8000438:	4618      	mov	r0, r3
 800043a:	f7ff ffad 	bl	8000398 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800043e:	697b      	ldr	r3, [r7, #20]
 8000440:	3301      	adds	r3, #1
 8000442:	617b      	str	r3, [r7, #20]
 8000444:	697a      	ldr	r2, [r7, #20]
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	429a      	cmp	r2, r3
 800044a:	dbf1      	blt.n	8000430 <_write+0x12>
  }
  return len;
 800044c:	687b      	ldr	r3, [r7, #4]
}
 800044e:	4618      	mov	r0, r3
 8000450:	3718      	adds	r7, #24
 8000452:	46bd      	mov	sp, r7
 8000454:	bd80      	pop	{r7, pc}

08000456 <_close>:

int _close(int file)
{
 8000456:	b480      	push	{r7}
 8000458:	b083      	sub	sp, #12
 800045a:	af00      	add	r7, sp, #0
 800045c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800045e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000462:	4618      	mov	r0, r3
 8000464:	370c      	adds	r7, #12
 8000466:	46bd      	mov	sp, r7
 8000468:	bc80      	pop	{r7}
 800046a:	4770      	bx	lr

0800046c <_fstat>:


int _fstat(int file, struct stat *st)
{
 800046c:	b480      	push	{r7}
 800046e:	b083      	sub	sp, #12
 8000470:	af00      	add	r7, sp, #0
 8000472:	6078      	str	r0, [r7, #4]
 8000474:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000476:	683b      	ldr	r3, [r7, #0]
 8000478:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800047c:	605a      	str	r2, [r3, #4]
  return 0;
 800047e:	2300      	movs	r3, #0
}
 8000480:	4618      	mov	r0, r3
 8000482:	370c      	adds	r7, #12
 8000484:	46bd      	mov	sp, r7
 8000486:	bc80      	pop	{r7}
 8000488:	4770      	bx	lr

0800048a <_isatty>:

int _isatty(int file)
{
 800048a:	b480      	push	{r7}
 800048c:	b083      	sub	sp, #12
 800048e:	af00      	add	r7, sp, #0
 8000490:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000492:	2301      	movs	r3, #1
}
 8000494:	4618      	mov	r0, r3
 8000496:	370c      	adds	r7, #12
 8000498:	46bd      	mov	sp, r7
 800049a:	bc80      	pop	{r7}
 800049c:	4770      	bx	lr

0800049e <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800049e:	b480      	push	{r7}
 80004a0:	b085      	sub	sp, #20
 80004a2:	af00      	add	r7, sp, #0
 80004a4:	60f8      	str	r0, [r7, #12]
 80004a6:	60b9      	str	r1, [r7, #8]
 80004a8:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80004aa:	2300      	movs	r3, #0
}
 80004ac:	4618      	mov	r0, r3
 80004ae:	3714      	adds	r7, #20
 80004b0:	46bd      	mov	sp, r7
 80004b2:	bc80      	pop	{r7}
 80004b4:	4770      	bx	lr
	...

080004b8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004b8:	b580      	push	{r7, lr}
 80004ba:	b086      	sub	sp, #24
 80004bc:	af00      	add	r7, sp, #0
 80004be:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004c0:	4a14      	ldr	r2, [pc, #80]	; (8000514 <_sbrk+0x5c>)
 80004c2:	4b15      	ldr	r3, [pc, #84]	; (8000518 <_sbrk+0x60>)
 80004c4:	1ad3      	subs	r3, r2, r3
 80004c6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004c8:	697b      	ldr	r3, [r7, #20]
 80004ca:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004cc:	4b13      	ldr	r3, [pc, #76]	; (800051c <_sbrk+0x64>)
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	2b00      	cmp	r3, #0
 80004d2:	d102      	bne.n	80004da <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004d4:	4b11      	ldr	r3, [pc, #68]	; (800051c <_sbrk+0x64>)
 80004d6:	4a12      	ldr	r2, [pc, #72]	; (8000520 <_sbrk+0x68>)
 80004d8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004da:	4b10      	ldr	r3, [pc, #64]	; (800051c <_sbrk+0x64>)
 80004dc:	681a      	ldr	r2, [r3, #0]
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	4413      	add	r3, r2
 80004e2:	693a      	ldr	r2, [r7, #16]
 80004e4:	429a      	cmp	r2, r3
 80004e6:	d207      	bcs.n	80004f8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004e8:	f000 fa9c 	bl	8000a24 <__errno>
 80004ec:	4603      	mov	r3, r0
 80004ee:	220c      	movs	r2, #12
 80004f0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004f2:	f04f 33ff 	mov.w	r3, #4294967295
 80004f6:	e009      	b.n	800050c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004f8:	4b08      	ldr	r3, [pc, #32]	; (800051c <_sbrk+0x64>)
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004fe:	4b07      	ldr	r3, [pc, #28]	; (800051c <_sbrk+0x64>)
 8000500:	681a      	ldr	r2, [r3, #0]
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	4413      	add	r3, r2
 8000506:	4a05      	ldr	r2, [pc, #20]	; (800051c <_sbrk+0x64>)
 8000508:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800050a:	68fb      	ldr	r3, [r7, #12]
}
 800050c:	4618      	mov	r0, r3
 800050e:	3718      	adds	r7, #24
 8000510:	46bd      	mov	sp, r7
 8000512:	bd80      	pop	{r7, pc}
 8000514:	20020000 	.word	0x20020000
 8000518:	00000400 	.word	0x00000400
 800051c:	20000078 	.word	0x20000078
 8000520:	200001c8 	.word	0x200001c8

08000524 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000524:	480d      	ldr	r0, [pc, #52]	; (800055c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000526:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000528:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800052c:	480c      	ldr	r0, [pc, #48]	; (8000560 <LoopForever+0x6>)
  ldr r1, =_edata
 800052e:	490d      	ldr	r1, [pc, #52]	; (8000564 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000530:	4a0d      	ldr	r2, [pc, #52]	; (8000568 <LoopForever+0xe>)
  movs r3, #0
 8000532:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000534:	e002      	b.n	800053c <LoopCopyDataInit>

08000536 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000536:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000538:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800053a:	3304      	adds	r3, #4

0800053c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800053c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800053e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000540:	d3f9      	bcc.n	8000536 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000542:	4a0a      	ldr	r2, [pc, #40]	; (800056c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000544:	4c0a      	ldr	r4, [pc, #40]	; (8000570 <LoopForever+0x16>)
  movs r3, #0
 8000546:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000548:	e001      	b.n	800054e <LoopFillZerobss>

0800054a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800054a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800054c:	3204      	adds	r2, #4

0800054e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800054e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000550:	d3fb      	bcc.n	800054a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000552:	f000 fa6d 	bl	8000a30 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000556:	f7ff feab 	bl	80002b0 <main>

0800055a <LoopForever>:

LoopForever:
  b LoopForever
 800055a:	e7fe      	b.n	800055a <LoopForever>
  ldr   r0, =_estack
 800055c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000560:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000564:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000568:	08001564 	.word	0x08001564
  ldr r2, =_sbss
 800056c:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000570:	200001c8 	.word	0x200001c8

08000574 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000574:	e7fe      	b.n	8000574 <ADC_IRQHandler>
	...

08000578 <std>:
 8000578:	2300      	movs	r3, #0
 800057a:	b510      	push	{r4, lr}
 800057c:	4604      	mov	r4, r0
 800057e:	e9c0 3300 	strd	r3, r3, [r0]
 8000582:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000586:	6083      	str	r3, [r0, #8]
 8000588:	8181      	strh	r1, [r0, #12]
 800058a:	6643      	str	r3, [r0, #100]	; 0x64
 800058c:	81c2      	strh	r2, [r0, #14]
 800058e:	6183      	str	r3, [r0, #24]
 8000590:	4619      	mov	r1, r3
 8000592:	2208      	movs	r2, #8
 8000594:	305c      	adds	r0, #92	; 0x5c
 8000596:	f000 f9f7 	bl	8000988 <memset>
 800059a:	4b0d      	ldr	r3, [pc, #52]	; (80005d0 <std+0x58>)
 800059c:	6263      	str	r3, [r4, #36]	; 0x24
 800059e:	4b0d      	ldr	r3, [pc, #52]	; (80005d4 <std+0x5c>)
 80005a0:	62a3      	str	r3, [r4, #40]	; 0x28
 80005a2:	4b0d      	ldr	r3, [pc, #52]	; (80005d8 <std+0x60>)
 80005a4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80005a6:	4b0d      	ldr	r3, [pc, #52]	; (80005dc <std+0x64>)
 80005a8:	6323      	str	r3, [r4, #48]	; 0x30
 80005aa:	4b0d      	ldr	r3, [pc, #52]	; (80005e0 <std+0x68>)
 80005ac:	6224      	str	r4, [r4, #32]
 80005ae:	429c      	cmp	r4, r3
 80005b0:	d006      	beq.n	80005c0 <std+0x48>
 80005b2:	f103 0268 	add.w	r2, r3, #104	; 0x68
 80005b6:	4294      	cmp	r4, r2
 80005b8:	d002      	beq.n	80005c0 <std+0x48>
 80005ba:	33d0      	adds	r3, #208	; 0xd0
 80005bc:	429c      	cmp	r4, r3
 80005be:	d105      	bne.n	80005cc <std+0x54>
 80005c0:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80005c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005c8:	f000 ba56 	b.w	8000a78 <__retarget_lock_init_recursive>
 80005cc:	bd10      	pop	{r4, pc}
 80005ce:	bf00      	nop
 80005d0:	080007d9 	.word	0x080007d9
 80005d4:	080007fb 	.word	0x080007fb
 80005d8:	08000833 	.word	0x08000833
 80005dc:	08000857 	.word	0x08000857
 80005e0:	2000007c 	.word	0x2000007c

080005e4 <stdio_exit_handler>:
 80005e4:	4a02      	ldr	r2, [pc, #8]	; (80005f0 <stdio_exit_handler+0xc>)
 80005e6:	4903      	ldr	r1, [pc, #12]	; (80005f4 <stdio_exit_handler+0x10>)
 80005e8:	4803      	ldr	r0, [pc, #12]	; (80005f8 <stdio_exit_handler+0x14>)
 80005ea:	f000 b869 	b.w	80006c0 <_fwalk_sglue>
 80005ee:	bf00      	nop
 80005f0:	20000000 	.word	0x20000000
 80005f4:	08001315 	.word	0x08001315
 80005f8:	2000000c 	.word	0x2000000c

080005fc <cleanup_stdio>:
 80005fc:	6841      	ldr	r1, [r0, #4]
 80005fe:	4b0c      	ldr	r3, [pc, #48]	; (8000630 <cleanup_stdio+0x34>)
 8000600:	4299      	cmp	r1, r3
 8000602:	b510      	push	{r4, lr}
 8000604:	4604      	mov	r4, r0
 8000606:	d001      	beq.n	800060c <cleanup_stdio+0x10>
 8000608:	f000 fe84 	bl	8001314 <_fflush_r>
 800060c:	68a1      	ldr	r1, [r4, #8]
 800060e:	4b09      	ldr	r3, [pc, #36]	; (8000634 <cleanup_stdio+0x38>)
 8000610:	4299      	cmp	r1, r3
 8000612:	d002      	beq.n	800061a <cleanup_stdio+0x1e>
 8000614:	4620      	mov	r0, r4
 8000616:	f000 fe7d 	bl	8001314 <_fflush_r>
 800061a:	68e1      	ldr	r1, [r4, #12]
 800061c:	4b06      	ldr	r3, [pc, #24]	; (8000638 <cleanup_stdio+0x3c>)
 800061e:	4299      	cmp	r1, r3
 8000620:	d004      	beq.n	800062c <cleanup_stdio+0x30>
 8000622:	4620      	mov	r0, r4
 8000624:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000628:	f000 be74 	b.w	8001314 <_fflush_r>
 800062c:	bd10      	pop	{r4, pc}
 800062e:	bf00      	nop
 8000630:	2000007c 	.word	0x2000007c
 8000634:	200000e4 	.word	0x200000e4
 8000638:	2000014c 	.word	0x2000014c

0800063c <global_stdio_init.part.0>:
 800063c:	b510      	push	{r4, lr}
 800063e:	4b0b      	ldr	r3, [pc, #44]	; (800066c <global_stdio_init.part.0+0x30>)
 8000640:	4c0b      	ldr	r4, [pc, #44]	; (8000670 <global_stdio_init.part.0+0x34>)
 8000642:	4a0c      	ldr	r2, [pc, #48]	; (8000674 <global_stdio_init.part.0+0x38>)
 8000644:	601a      	str	r2, [r3, #0]
 8000646:	4620      	mov	r0, r4
 8000648:	2200      	movs	r2, #0
 800064a:	2104      	movs	r1, #4
 800064c:	f7ff ff94 	bl	8000578 <std>
 8000650:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000654:	2201      	movs	r2, #1
 8000656:	2109      	movs	r1, #9
 8000658:	f7ff ff8e 	bl	8000578 <std>
 800065c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000660:	2202      	movs	r2, #2
 8000662:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000666:	2112      	movs	r1, #18
 8000668:	f7ff bf86 	b.w	8000578 <std>
 800066c:	200001b4 	.word	0x200001b4
 8000670:	2000007c 	.word	0x2000007c
 8000674:	080005e5 	.word	0x080005e5

08000678 <__sfp_lock_acquire>:
 8000678:	4801      	ldr	r0, [pc, #4]	; (8000680 <__sfp_lock_acquire+0x8>)
 800067a:	f000 b9fe 	b.w	8000a7a <__retarget_lock_acquire_recursive>
 800067e:	bf00      	nop
 8000680:	200001bd 	.word	0x200001bd

08000684 <__sfp_lock_release>:
 8000684:	4801      	ldr	r0, [pc, #4]	; (800068c <__sfp_lock_release+0x8>)
 8000686:	f000 b9f9 	b.w	8000a7c <__retarget_lock_release_recursive>
 800068a:	bf00      	nop
 800068c:	200001bd 	.word	0x200001bd

08000690 <__sinit>:
 8000690:	b510      	push	{r4, lr}
 8000692:	4604      	mov	r4, r0
 8000694:	f7ff fff0 	bl	8000678 <__sfp_lock_acquire>
 8000698:	6a23      	ldr	r3, [r4, #32]
 800069a:	b11b      	cbz	r3, 80006a4 <__sinit+0x14>
 800069c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006a0:	f7ff bff0 	b.w	8000684 <__sfp_lock_release>
 80006a4:	4b04      	ldr	r3, [pc, #16]	; (80006b8 <__sinit+0x28>)
 80006a6:	6223      	str	r3, [r4, #32]
 80006a8:	4b04      	ldr	r3, [pc, #16]	; (80006bc <__sinit+0x2c>)
 80006aa:	681b      	ldr	r3, [r3, #0]
 80006ac:	2b00      	cmp	r3, #0
 80006ae:	d1f5      	bne.n	800069c <__sinit+0xc>
 80006b0:	f7ff ffc4 	bl	800063c <global_stdio_init.part.0>
 80006b4:	e7f2      	b.n	800069c <__sinit+0xc>
 80006b6:	bf00      	nop
 80006b8:	080005fd 	.word	0x080005fd
 80006bc:	200001b4 	.word	0x200001b4

080006c0 <_fwalk_sglue>:
 80006c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80006c4:	4607      	mov	r7, r0
 80006c6:	4688      	mov	r8, r1
 80006c8:	4614      	mov	r4, r2
 80006ca:	2600      	movs	r6, #0
 80006cc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80006d0:	f1b9 0901 	subs.w	r9, r9, #1
 80006d4:	d505      	bpl.n	80006e2 <_fwalk_sglue+0x22>
 80006d6:	6824      	ldr	r4, [r4, #0]
 80006d8:	2c00      	cmp	r4, #0
 80006da:	d1f7      	bne.n	80006cc <_fwalk_sglue+0xc>
 80006dc:	4630      	mov	r0, r6
 80006de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80006e2:	89ab      	ldrh	r3, [r5, #12]
 80006e4:	2b01      	cmp	r3, #1
 80006e6:	d907      	bls.n	80006f8 <_fwalk_sglue+0x38>
 80006e8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80006ec:	3301      	adds	r3, #1
 80006ee:	d003      	beq.n	80006f8 <_fwalk_sglue+0x38>
 80006f0:	4629      	mov	r1, r5
 80006f2:	4638      	mov	r0, r7
 80006f4:	47c0      	blx	r8
 80006f6:	4306      	orrs	r6, r0
 80006f8:	3568      	adds	r5, #104	; 0x68
 80006fa:	e7e9      	b.n	80006d0 <_fwalk_sglue+0x10>

080006fc <iprintf>:
 80006fc:	b40f      	push	{r0, r1, r2, r3}
 80006fe:	b507      	push	{r0, r1, r2, lr}
 8000700:	4906      	ldr	r1, [pc, #24]	; (800071c <iprintf+0x20>)
 8000702:	ab04      	add	r3, sp, #16
 8000704:	6808      	ldr	r0, [r1, #0]
 8000706:	f853 2b04 	ldr.w	r2, [r3], #4
 800070a:	6881      	ldr	r1, [r0, #8]
 800070c:	9301      	str	r3, [sp, #4]
 800070e:	f000 fad5 	bl	8000cbc <_vfiprintf_r>
 8000712:	b003      	add	sp, #12
 8000714:	f85d eb04 	ldr.w	lr, [sp], #4
 8000718:	b004      	add	sp, #16
 800071a:	4770      	bx	lr
 800071c:	20000058 	.word	0x20000058

08000720 <_puts_r>:
 8000720:	6a03      	ldr	r3, [r0, #32]
 8000722:	b570      	push	{r4, r5, r6, lr}
 8000724:	6884      	ldr	r4, [r0, #8]
 8000726:	4605      	mov	r5, r0
 8000728:	460e      	mov	r6, r1
 800072a:	b90b      	cbnz	r3, 8000730 <_puts_r+0x10>
 800072c:	f7ff ffb0 	bl	8000690 <__sinit>
 8000730:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000732:	07db      	lsls	r3, r3, #31
 8000734:	d405      	bmi.n	8000742 <_puts_r+0x22>
 8000736:	89a3      	ldrh	r3, [r4, #12]
 8000738:	0598      	lsls	r0, r3, #22
 800073a:	d402      	bmi.n	8000742 <_puts_r+0x22>
 800073c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800073e:	f000 f99c 	bl	8000a7a <__retarget_lock_acquire_recursive>
 8000742:	89a3      	ldrh	r3, [r4, #12]
 8000744:	0719      	lsls	r1, r3, #28
 8000746:	d513      	bpl.n	8000770 <_puts_r+0x50>
 8000748:	6923      	ldr	r3, [r4, #16]
 800074a:	b18b      	cbz	r3, 8000770 <_puts_r+0x50>
 800074c:	3e01      	subs	r6, #1
 800074e:	68a3      	ldr	r3, [r4, #8]
 8000750:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000754:	3b01      	subs	r3, #1
 8000756:	60a3      	str	r3, [r4, #8]
 8000758:	b9e9      	cbnz	r1, 8000796 <_puts_r+0x76>
 800075a:	2b00      	cmp	r3, #0
 800075c:	da2e      	bge.n	80007bc <_puts_r+0x9c>
 800075e:	4622      	mov	r2, r4
 8000760:	210a      	movs	r1, #10
 8000762:	4628      	mov	r0, r5
 8000764:	f000 f87b 	bl	800085e <__swbuf_r>
 8000768:	3001      	adds	r0, #1
 800076a:	d007      	beq.n	800077c <_puts_r+0x5c>
 800076c:	250a      	movs	r5, #10
 800076e:	e007      	b.n	8000780 <_puts_r+0x60>
 8000770:	4621      	mov	r1, r4
 8000772:	4628      	mov	r0, r5
 8000774:	f000 f8b0 	bl	80008d8 <__swsetup_r>
 8000778:	2800      	cmp	r0, #0
 800077a:	d0e7      	beq.n	800074c <_puts_r+0x2c>
 800077c:	f04f 35ff 	mov.w	r5, #4294967295
 8000780:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000782:	07da      	lsls	r2, r3, #31
 8000784:	d405      	bmi.n	8000792 <_puts_r+0x72>
 8000786:	89a3      	ldrh	r3, [r4, #12]
 8000788:	059b      	lsls	r3, r3, #22
 800078a:	d402      	bmi.n	8000792 <_puts_r+0x72>
 800078c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800078e:	f000 f975 	bl	8000a7c <__retarget_lock_release_recursive>
 8000792:	4628      	mov	r0, r5
 8000794:	bd70      	pop	{r4, r5, r6, pc}
 8000796:	2b00      	cmp	r3, #0
 8000798:	da04      	bge.n	80007a4 <_puts_r+0x84>
 800079a:	69a2      	ldr	r2, [r4, #24]
 800079c:	429a      	cmp	r2, r3
 800079e:	dc06      	bgt.n	80007ae <_puts_r+0x8e>
 80007a0:	290a      	cmp	r1, #10
 80007a2:	d004      	beq.n	80007ae <_puts_r+0x8e>
 80007a4:	6823      	ldr	r3, [r4, #0]
 80007a6:	1c5a      	adds	r2, r3, #1
 80007a8:	6022      	str	r2, [r4, #0]
 80007aa:	7019      	strb	r1, [r3, #0]
 80007ac:	e7cf      	b.n	800074e <_puts_r+0x2e>
 80007ae:	4622      	mov	r2, r4
 80007b0:	4628      	mov	r0, r5
 80007b2:	f000 f854 	bl	800085e <__swbuf_r>
 80007b6:	3001      	adds	r0, #1
 80007b8:	d1c9      	bne.n	800074e <_puts_r+0x2e>
 80007ba:	e7df      	b.n	800077c <_puts_r+0x5c>
 80007bc:	6823      	ldr	r3, [r4, #0]
 80007be:	250a      	movs	r5, #10
 80007c0:	1c5a      	adds	r2, r3, #1
 80007c2:	6022      	str	r2, [r4, #0]
 80007c4:	701d      	strb	r5, [r3, #0]
 80007c6:	e7db      	b.n	8000780 <_puts_r+0x60>

080007c8 <puts>:
 80007c8:	4b02      	ldr	r3, [pc, #8]	; (80007d4 <puts+0xc>)
 80007ca:	4601      	mov	r1, r0
 80007cc:	6818      	ldr	r0, [r3, #0]
 80007ce:	f7ff bfa7 	b.w	8000720 <_puts_r>
 80007d2:	bf00      	nop
 80007d4:	20000058 	.word	0x20000058

080007d8 <__sread>:
 80007d8:	b510      	push	{r4, lr}
 80007da:	460c      	mov	r4, r1
 80007dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007e0:	f000 f8fc 	bl	80009dc <_read_r>
 80007e4:	2800      	cmp	r0, #0
 80007e6:	bfab      	itete	ge
 80007e8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80007ea:	89a3      	ldrhlt	r3, [r4, #12]
 80007ec:	181b      	addge	r3, r3, r0
 80007ee:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80007f2:	bfac      	ite	ge
 80007f4:	6563      	strge	r3, [r4, #84]	; 0x54
 80007f6:	81a3      	strhlt	r3, [r4, #12]
 80007f8:	bd10      	pop	{r4, pc}

080007fa <__swrite>:
 80007fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80007fe:	461f      	mov	r7, r3
 8000800:	898b      	ldrh	r3, [r1, #12]
 8000802:	05db      	lsls	r3, r3, #23
 8000804:	4605      	mov	r5, r0
 8000806:	460c      	mov	r4, r1
 8000808:	4616      	mov	r6, r2
 800080a:	d505      	bpl.n	8000818 <__swrite+0x1e>
 800080c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000810:	2302      	movs	r3, #2
 8000812:	2200      	movs	r2, #0
 8000814:	f000 f8d0 	bl	80009b8 <_lseek_r>
 8000818:	89a3      	ldrh	r3, [r4, #12]
 800081a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800081e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000822:	81a3      	strh	r3, [r4, #12]
 8000824:	4632      	mov	r2, r6
 8000826:	463b      	mov	r3, r7
 8000828:	4628      	mov	r0, r5
 800082a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800082e:	f000 b8e7 	b.w	8000a00 <_write_r>

08000832 <__sseek>:
 8000832:	b510      	push	{r4, lr}
 8000834:	460c      	mov	r4, r1
 8000836:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800083a:	f000 f8bd 	bl	80009b8 <_lseek_r>
 800083e:	1c43      	adds	r3, r0, #1
 8000840:	89a3      	ldrh	r3, [r4, #12]
 8000842:	bf15      	itete	ne
 8000844:	6560      	strne	r0, [r4, #84]	; 0x54
 8000846:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800084a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800084e:	81a3      	strheq	r3, [r4, #12]
 8000850:	bf18      	it	ne
 8000852:	81a3      	strhne	r3, [r4, #12]
 8000854:	bd10      	pop	{r4, pc}

08000856 <__sclose>:
 8000856:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800085a:	f000 b89d 	b.w	8000998 <_close_r>

0800085e <__swbuf_r>:
 800085e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000860:	460e      	mov	r6, r1
 8000862:	4614      	mov	r4, r2
 8000864:	4605      	mov	r5, r0
 8000866:	b118      	cbz	r0, 8000870 <__swbuf_r+0x12>
 8000868:	6a03      	ldr	r3, [r0, #32]
 800086a:	b90b      	cbnz	r3, 8000870 <__swbuf_r+0x12>
 800086c:	f7ff ff10 	bl	8000690 <__sinit>
 8000870:	69a3      	ldr	r3, [r4, #24]
 8000872:	60a3      	str	r3, [r4, #8]
 8000874:	89a3      	ldrh	r3, [r4, #12]
 8000876:	071a      	lsls	r2, r3, #28
 8000878:	d525      	bpl.n	80008c6 <__swbuf_r+0x68>
 800087a:	6923      	ldr	r3, [r4, #16]
 800087c:	b31b      	cbz	r3, 80008c6 <__swbuf_r+0x68>
 800087e:	6823      	ldr	r3, [r4, #0]
 8000880:	6922      	ldr	r2, [r4, #16]
 8000882:	1a98      	subs	r0, r3, r2
 8000884:	6963      	ldr	r3, [r4, #20]
 8000886:	b2f6      	uxtb	r6, r6
 8000888:	4283      	cmp	r3, r0
 800088a:	4637      	mov	r7, r6
 800088c:	dc04      	bgt.n	8000898 <__swbuf_r+0x3a>
 800088e:	4621      	mov	r1, r4
 8000890:	4628      	mov	r0, r5
 8000892:	f000 fd3f 	bl	8001314 <_fflush_r>
 8000896:	b9e0      	cbnz	r0, 80008d2 <__swbuf_r+0x74>
 8000898:	68a3      	ldr	r3, [r4, #8]
 800089a:	3b01      	subs	r3, #1
 800089c:	60a3      	str	r3, [r4, #8]
 800089e:	6823      	ldr	r3, [r4, #0]
 80008a0:	1c5a      	adds	r2, r3, #1
 80008a2:	6022      	str	r2, [r4, #0]
 80008a4:	701e      	strb	r6, [r3, #0]
 80008a6:	6962      	ldr	r2, [r4, #20]
 80008a8:	1c43      	adds	r3, r0, #1
 80008aa:	429a      	cmp	r2, r3
 80008ac:	d004      	beq.n	80008b8 <__swbuf_r+0x5a>
 80008ae:	89a3      	ldrh	r3, [r4, #12]
 80008b0:	07db      	lsls	r3, r3, #31
 80008b2:	d506      	bpl.n	80008c2 <__swbuf_r+0x64>
 80008b4:	2e0a      	cmp	r6, #10
 80008b6:	d104      	bne.n	80008c2 <__swbuf_r+0x64>
 80008b8:	4621      	mov	r1, r4
 80008ba:	4628      	mov	r0, r5
 80008bc:	f000 fd2a 	bl	8001314 <_fflush_r>
 80008c0:	b938      	cbnz	r0, 80008d2 <__swbuf_r+0x74>
 80008c2:	4638      	mov	r0, r7
 80008c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80008c6:	4621      	mov	r1, r4
 80008c8:	4628      	mov	r0, r5
 80008ca:	f000 f805 	bl	80008d8 <__swsetup_r>
 80008ce:	2800      	cmp	r0, #0
 80008d0:	d0d5      	beq.n	800087e <__swbuf_r+0x20>
 80008d2:	f04f 37ff 	mov.w	r7, #4294967295
 80008d6:	e7f4      	b.n	80008c2 <__swbuf_r+0x64>

080008d8 <__swsetup_r>:
 80008d8:	b538      	push	{r3, r4, r5, lr}
 80008da:	4b2a      	ldr	r3, [pc, #168]	; (8000984 <__swsetup_r+0xac>)
 80008dc:	4605      	mov	r5, r0
 80008de:	6818      	ldr	r0, [r3, #0]
 80008e0:	460c      	mov	r4, r1
 80008e2:	b118      	cbz	r0, 80008ec <__swsetup_r+0x14>
 80008e4:	6a03      	ldr	r3, [r0, #32]
 80008e6:	b90b      	cbnz	r3, 80008ec <__swsetup_r+0x14>
 80008e8:	f7ff fed2 	bl	8000690 <__sinit>
 80008ec:	89a3      	ldrh	r3, [r4, #12]
 80008ee:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80008f2:	0718      	lsls	r0, r3, #28
 80008f4:	d422      	bmi.n	800093c <__swsetup_r+0x64>
 80008f6:	06d9      	lsls	r1, r3, #27
 80008f8:	d407      	bmi.n	800090a <__swsetup_r+0x32>
 80008fa:	2309      	movs	r3, #9
 80008fc:	602b      	str	r3, [r5, #0]
 80008fe:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000902:	81a3      	strh	r3, [r4, #12]
 8000904:	f04f 30ff 	mov.w	r0, #4294967295
 8000908:	e034      	b.n	8000974 <__swsetup_r+0x9c>
 800090a:	0758      	lsls	r0, r3, #29
 800090c:	d512      	bpl.n	8000934 <__swsetup_r+0x5c>
 800090e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000910:	b141      	cbz	r1, 8000924 <__swsetup_r+0x4c>
 8000912:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000916:	4299      	cmp	r1, r3
 8000918:	d002      	beq.n	8000920 <__swsetup_r+0x48>
 800091a:	4628      	mov	r0, r5
 800091c:	f000 f8b0 	bl	8000a80 <_free_r>
 8000920:	2300      	movs	r3, #0
 8000922:	6363      	str	r3, [r4, #52]	; 0x34
 8000924:	89a3      	ldrh	r3, [r4, #12]
 8000926:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800092a:	81a3      	strh	r3, [r4, #12]
 800092c:	2300      	movs	r3, #0
 800092e:	6063      	str	r3, [r4, #4]
 8000930:	6923      	ldr	r3, [r4, #16]
 8000932:	6023      	str	r3, [r4, #0]
 8000934:	89a3      	ldrh	r3, [r4, #12]
 8000936:	f043 0308 	orr.w	r3, r3, #8
 800093a:	81a3      	strh	r3, [r4, #12]
 800093c:	6923      	ldr	r3, [r4, #16]
 800093e:	b94b      	cbnz	r3, 8000954 <__swsetup_r+0x7c>
 8000940:	89a3      	ldrh	r3, [r4, #12]
 8000942:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000946:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800094a:	d003      	beq.n	8000954 <__swsetup_r+0x7c>
 800094c:	4621      	mov	r1, r4
 800094e:	4628      	mov	r0, r5
 8000950:	f000 fd2e 	bl	80013b0 <__smakebuf_r>
 8000954:	89a0      	ldrh	r0, [r4, #12]
 8000956:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800095a:	f010 0301 	ands.w	r3, r0, #1
 800095e:	d00a      	beq.n	8000976 <__swsetup_r+0x9e>
 8000960:	2300      	movs	r3, #0
 8000962:	60a3      	str	r3, [r4, #8]
 8000964:	6963      	ldr	r3, [r4, #20]
 8000966:	425b      	negs	r3, r3
 8000968:	61a3      	str	r3, [r4, #24]
 800096a:	6923      	ldr	r3, [r4, #16]
 800096c:	b943      	cbnz	r3, 8000980 <__swsetup_r+0xa8>
 800096e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000972:	d1c4      	bne.n	80008fe <__swsetup_r+0x26>
 8000974:	bd38      	pop	{r3, r4, r5, pc}
 8000976:	0781      	lsls	r1, r0, #30
 8000978:	bf58      	it	pl
 800097a:	6963      	ldrpl	r3, [r4, #20]
 800097c:	60a3      	str	r3, [r4, #8]
 800097e:	e7f4      	b.n	800096a <__swsetup_r+0x92>
 8000980:	2000      	movs	r0, #0
 8000982:	e7f7      	b.n	8000974 <__swsetup_r+0x9c>
 8000984:	20000058 	.word	0x20000058

08000988 <memset>:
 8000988:	4402      	add	r2, r0
 800098a:	4603      	mov	r3, r0
 800098c:	4293      	cmp	r3, r2
 800098e:	d100      	bne.n	8000992 <memset+0xa>
 8000990:	4770      	bx	lr
 8000992:	f803 1b01 	strb.w	r1, [r3], #1
 8000996:	e7f9      	b.n	800098c <memset+0x4>

08000998 <_close_r>:
 8000998:	b538      	push	{r3, r4, r5, lr}
 800099a:	4d06      	ldr	r5, [pc, #24]	; (80009b4 <_close_r+0x1c>)
 800099c:	2300      	movs	r3, #0
 800099e:	4604      	mov	r4, r0
 80009a0:	4608      	mov	r0, r1
 80009a2:	602b      	str	r3, [r5, #0]
 80009a4:	f7ff fd57 	bl	8000456 <_close>
 80009a8:	1c43      	adds	r3, r0, #1
 80009aa:	d102      	bne.n	80009b2 <_close_r+0x1a>
 80009ac:	682b      	ldr	r3, [r5, #0]
 80009ae:	b103      	cbz	r3, 80009b2 <_close_r+0x1a>
 80009b0:	6023      	str	r3, [r4, #0]
 80009b2:	bd38      	pop	{r3, r4, r5, pc}
 80009b4:	200001b8 	.word	0x200001b8

080009b8 <_lseek_r>:
 80009b8:	b538      	push	{r3, r4, r5, lr}
 80009ba:	4d07      	ldr	r5, [pc, #28]	; (80009d8 <_lseek_r+0x20>)
 80009bc:	4604      	mov	r4, r0
 80009be:	4608      	mov	r0, r1
 80009c0:	4611      	mov	r1, r2
 80009c2:	2200      	movs	r2, #0
 80009c4:	602a      	str	r2, [r5, #0]
 80009c6:	461a      	mov	r2, r3
 80009c8:	f7ff fd69 	bl	800049e <_lseek>
 80009cc:	1c43      	adds	r3, r0, #1
 80009ce:	d102      	bne.n	80009d6 <_lseek_r+0x1e>
 80009d0:	682b      	ldr	r3, [r5, #0]
 80009d2:	b103      	cbz	r3, 80009d6 <_lseek_r+0x1e>
 80009d4:	6023      	str	r3, [r4, #0]
 80009d6:	bd38      	pop	{r3, r4, r5, pc}
 80009d8:	200001b8 	.word	0x200001b8

080009dc <_read_r>:
 80009dc:	b538      	push	{r3, r4, r5, lr}
 80009de:	4d07      	ldr	r5, [pc, #28]	; (80009fc <_read_r+0x20>)
 80009e0:	4604      	mov	r4, r0
 80009e2:	4608      	mov	r0, r1
 80009e4:	4611      	mov	r1, r2
 80009e6:	2200      	movs	r2, #0
 80009e8:	602a      	str	r2, [r5, #0]
 80009ea:	461a      	mov	r2, r3
 80009ec:	f7ff fcfa 	bl	80003e4 <_read>
 80009f0:	1c43      	adds	r3, r0, #1
 80009f2:	d102      	bne.n	80009fa <_read_r+0x1e>
 80009f4:	682b      	ldr	r3, [r5, #0]
 80009f6:	b103      	cbz	r3, 80009fa <_read_r+0x1e>
 80009f8:	6023      	str	r3, [r4, #0]
 80009fa:	bd38      	pop	{r3, r4, r5, pc}
 80009fc:	200001b8 	.word	0x200001b8

08000a00 <_write_r>:
 8000a00:	b538      	push	{r3, r4, r5, lr}
 8000a02:	4d07      	ldr	r5, [pc, #28]	; (8000a20 <_write_r+0x20>)
 8000a04:	4604      	mov	r4, r0
 8000a06:	4608      	mov	r0, r1
 8000a08:	4611      	mov	r1, r2
 8000a0a:	2200      	movs	r2, #0
 8000a0c:	602a      	str	r2, [r5, #0]
 8000a0e:	461a      	mov	r2, r3
 8000a10:	f7ff fd05 	bl	800041e <_write>
 8000a14:	1c43      	adds	r3, r0, #1
 8000a16:	d102      	bne.n	8000a1e <_write_r+0x1e>
 8000a18:	682b      	ldr	r3, [r5, #0]
 8000a1a:	b103      	cbz	r3, 8000a1e <_write_r+0x1e>
 8000a1c:	6023      	str	r3, [r4, #0]
 8000a1e:	bd38      	pop	{r3, r4, r5, pc}
 8000a20:	200001b8 	.word	0x200001b8

08000a24 <__errno>:
 8000a24:	4b01      	ldr	r3, [pc, #4]	; (8000a2c <__errno+0x8>)
 8000a26:	6818      	ldr	r0, [r3, #0]
 8000a28:	4770      	bx	lr
 8000a2a:	bf00      	nop
 8000a2c:	20000058 	.word	0x20000058

08000a30 <__libc_init_array>:
 8000a30:	b570      	push	{r4, r5, r6, lr}
 8000a32:	4d0d      	ldr	r5, [pc, #52]	; (8000a68 <__libc_init_array+0x38>)
 8000a34:	4c0d      	ldr	r4, [pc, #52]	; (8000a6c <__libc_init_array+0x3c>)
 8000a36:	1b64      	subs	r4, r4, r5
 8000a38:	10a4      	asrs	r4, r4, #2
 8000a3a:	2600      	movs	r6, #0
 8000a3c:	42a6      	cmp	r6, r4
 8000a3e:	d109      	bne.n	8000a54 <__libc_init_array+0x24>
 8000a40:	4d0b      	ldr	r5, [pc, #44]	; (8000a70 <__libc_init_array+0x40>)
 8000a42:	4c0c      	ldr	r4, [pc, #48]	; (8000a74 <__libc_init_array+0x44>)
 8000a44:	f000 fd22 	bl	800148c <_init>
 8000a48:	1b64      	subs	r4, r4, r5
 8000a4a:	10a4      	asrs	r4, r4, #2
 8000a4c:	2600      	movs	r6, #0
 8000a4e:	42a6      	cmp	r6, r4
 8000a50:	d105      	bne.n	8000a5e <__libc_init_array+0x2e>
 8000a52:	bd70      	pop	{r4, r5, r6, pc}
 8000a54:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a58:	4798      	blx	r3
 8000a5a:	3601      	adds	r6, #1
 8000a5c:	e7ee      	b.n	8000a3c <__libc_init_array+0xc>
 8000a5e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a62:	4798      	blx	r3
 8000a64:	3601      	adds	r6, #1
 8000a66:	e7f2      	b.n	8000a4e <__libc_init_array+0x1e>
 8000a68:	0800155c 	.word	0x0800155c
 8000a6c:	0800155c 	.word	0x0800155c
 8000a70:	0800155c 	.word	0x0800155c
 8000a74:	08001560 	.word	0x08001560

08000a78 <__retarget_lock_init_recursive>:
 8000a78:	4770      	bx	lr

08000a7a <__retarget_lock_acquire_recursive>:
 8000a7a:	4770      	bx	lr

08000a7c <__retarget_lock_release_recursive>:
 8000a7c:	4770      	bx	lr
	...

08000a80 <_free_r>:
 8000a80:	b538      	push	{r3, r4, r5, lr}
 8000a82:	4605      	mov	r5, r0
 8000a84:	2900      	cmp	r1, #0
 8000a86:	d041      	beq.n	8000b0c <_free_r+0x8c>
 8000a88:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a8c:	1f0c      	subs	r4, r1, #4
 8000a8e:	2b00      	cmp	r3, #0
 8000a90:	bfb8      	it	lt
 8000a92:	18e4      	addlt	r4, r4, r3
 8000a94:	f000 f8de 	bl	8000c54 <__malloc_lock>
 8000a98:	4a1d      	ldr	r2, [pc, #116]	; (8000b10 <_free_r+0x90>)
 8000a9a:	6813      	ldr	r3, [r2, #0]
 8000a9c:	b933      	cbnz	r3, 8000aac <_free_r+0x2c>
 8000a9e:	6063      	str	r3, [r4, #4]
 8000aa0:	6014      	str	r4, [r2, #0]
 8000aa2:	4628      	mov	r0, r5
 8000aa4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000aa8:	f000 b8da 	b.w	8000c60 <__malloc_unlock>
 8000aac:	42a3      	cmp	r3, r4
 8000aae:	d908      	bls.n	8000ac2 <_free_r+0x42>
 8000ab0:	6820      	ldr	r0, [r4, #0]
 8000ab2:	1821      	adds	r1, r4, r0
 8000ab4:	428b      	cmp	r3, r1
 8000ab6:	bf01      	itttt	eq
 8000ab8:	6819      	ldreq	r1, [r3, #0]
 8000aba:	685b      	ldreq	r3, [r3, #4]
 8000abc:	1809      	addeq	r1, r1, r0
 8000abe:	6021      	streq	r1, [r4, #0]
 8000ac0:	e7ed      	b.n	8000a9e <_free_r+0x1e>
 8000ac2:	461a      	mov	r2, r3
 8000ac4:	685b      	ldr	r3, [r3, #4]
 8000ac6:	b10b      	cbz	r3, 8000acc <_free_r+0x4c>
 8000ac8:	42a3      	cmp	r3, r4
 8000aca:	d9fa      	bls.n	8000ac2 <_free_r+0x42>
 8000acc:	6811      	ldr	r1, [r2, #0]
 8000ace:	1850      	adds	r0, r2, r1
 8000ad0:	42a0      	cmp	r0, r4
 8000ad2:	d10b      	bne.n	8000aec <_free_r+0x6c>
 8000ad4:	6820      	ldr	r0, [r4, #0]
 8000ad6:	4401      	add	r1, r0
 8000ad8:	1850      	adds	r0, r2, r1
 8000ada:	4283      	cmp	r3, r0
 8000adc:	6011      	str	r1, [r2, #0]
 8000ade:	d1e0      	bne.n	8000aa2 <_free_r+0x22>
 8000ae0:	6818      	ldr	r0, [r3, #0]
 8000ae2:	685b      	ldr	r3, [r3, #4]
 8000ae4:	6053      	str	r3, [r2, #4]
 8000ae6:	4408      	add	r0, r1
 8000ae8:	6010      	str	r0, [r2, #0]
 8000aea:	e7da      	b.n	8000aa2 <_free_r+0x22>
 8000aec:	d902      	bls.n	8000af4 <_free_r+0x74>
 8000aee:	230c      	movs	r3, #12
 8000af0:	602b      	str	r3, [r5, #0]
 8000af2:	e7d6      	b.n	8000aa2 <_free_r+0x22>
 8000af4:	6820      	ldr	r0, [r4, #0]
 8000af6:	1821      	adds	r1, r4, r0
 8000af8:	428b      	cmp	r3, r1
 8000afa:	bf04      	itt	eq
 8000afc:	6819      	ldreq	r1, [r3, #0]
 8000afe:	685b      	ldreq	r3, [r3, #4]
 8000b00:	6063      	str	r3, [r4, #4]
 8000b02:	bf04      	itt	eq
 8000b04:	1809      	addeq	r1, r1, r0
 8000b06:	6021      	streq	r1, [r4, #0]
 8000b08:	6054      	str	r4, [r2, #4]
 8000b0a:	e7ca      	b.n	8000aa2 <_free_r+0x22>
 8000b0c:	bd38      	pop	{r3, r4, r5, pc}
 8000b0e:	bf00      	nop
 8000b10:	200001c0 	.word	0x200001c0

08000b14 <sbrk_aligned>:
 8000b14:	b570      	push	{r4, r5, r6, lr}
 8000b16:	4e0e      	ldr	r6, [pc, #56]	; (8000b50 <sbrk_aligned+0x3c>)
 8000b18:	460c      	mov	r4, r1
 8000b1a:	6831      	ldr	r1, [r6, #0]
 8000b1c:	4605      	mov	r5, r0
 8000b1e:	b911      	cbnz	r1, 8000b26 <sbrk_aligned+0x12>
 8000b20:	f000 fca4 	bl	800146c <_sbrk_r>
 8000b24:	6030      	str	r0, [r6, #0]
 8000b26:	4621      	mov	r1, r4
 8000b28:	4628      	mov	r0, r5
 8000b2a:	f000 fc9f 	bl	800146c <_sbrk_r>
 8000b2e:	1c43      	adds	r3, r0, #1
 8000b30:	d00a      	beq.n	8000b48 <sbrk_aligned+0x34>
 8000b32:	1cc4      	adds	r4, r0, #3
 8000b34:	f024 0403 	bic.w	r4, r4, #3
 8000b38:	42a0      	cmp	r0, r4
 8000b3a:	d007      	beq.n	8000b4c <sbrk_aligned+0x38>
 8000b3c:	1a21      	subs	r1, r4, r0
 8000b3e:	4628      	mov	r0, r5
 8000b40:	f000 fc94 	bl	800146c <_sbrk_r>
 8000b44:	3001      	adds	r0, #1
 8000b46:	d101      	bne.n	8000b4c <sbrk_aligned+0x38>
 8000b48:	f04f 34ff 	mov.w	r4, #4294967295
 8000b4c:	4620      	mov	r0, r4
 8000b4e:	bd70      	pop	{r4, r5, r6, pc}
 8000b50:	200001c4 	.word	0x200001c4

08000b54 <_malloc_r>:
 8000b54:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b58:	1ccd      	adds	r5, r1, #3
 8000b5a:	f025 0503 	bic.w	r5, r5, #3
 8000b5e:	3508      	adds	r5, #8
 8000b60:	2d0c      	cmp	r5, #12
 8000b62:	bf38      	it	cc
 8000b64:	250c      	movcc	r5, #12
 8000b66:	2d00      	cmp	r5, #0
 8000b68:	4607      	mov	r7, r0
 8000b6a:	db01      	blt.n	8000b70 <_malloc_r+0x1c>
 8000b6c:	42a9      	cmp	r1, r5
 8000b6e:	d905      	bls.n	8000b7c <_malloc_r+0x28>
 8000b70:	230c      	movs	r3, #12
 8000b72:	603b      	str	r3, [r7, #0]
 8000b74:	2600      	movs	r6, #0
 8000b76:	4630      	mov	r0, r6
 8000b78:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b7c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000c50 <_malloc_r+0xfc>
 8000b80:	f000 f868 	bl	8000c54 <__malloc_lock>
 8000b84:	f8d8 3000 	ldr.w	r3, [r8]
 8000b88:	461c      	mov	r4, r3
 8000b8a:	bb5c      	cbnz	r4, 8000be4 <_malloc_r+0x90>
 8000b8c:	4629      	mov	r1, r5
 8000b8e:	4638      	mov	r0, r7
 8000b90:	f7ff ffc0 	bl	8000b14 <sbrk_aligned>
 8000b94:	1c43      	adds	r3, r0, #1
 8000b96:	4604      	mov	r4, r0
 8000b98:	d155      	bne.n	8000c46 <_malloc_r+0xf2>
 8000b9a:	f8d8 4000 	ldr.w	r4, [r8]
 8000b9e:	4626      	mov	r6, r4
 8000ba0:	2e00      	cmp	r6, #0
 8000ba2:	d145      	bne.n	8000c30 <_malloc_r+0xdc>
 8000ba4:	2c00      	cmp	r4, #0
 8000ba6:	d048      	beq.n	8000c3a <_malloc_r+0xe6>
 8000ba8:	6823      	ldr	r3, [r4, #0]
 8000baa:	4631      	mov	r1, r6
 8000bac:	4638      	mov	r0, r7
 8000bae:	eb04 0903 	add.w	r9, r4, r3
 8000bb2:	f000 fc5b 	bl	800146c <_sbrk_r>
 8000bb6:	4581      	cmp	r9, r0
 8000bb8:	d13f      	bne.n	8000c3a <_malloc_r+0xe6>
 8000bba:	6821      	ldr	r1, [r4, #0]
 8000bbc:	1a6d      	subs	r5, r5, r1
 8000bbe:	4629      	mov	r1, r5
 8000bc0:	4638      	mov	r0, r7
 8000bc2:	f7ff ffa7 	bl	8000b14 <sbrk_aligned>
 8000bc6:	3001      	adds	r0, #1
 8000bc8:	d037      	beq.n	8000c3a <_malloc_r+0xe6>
 8000bca:	6823      	ldr	r3, [r4, #0]
 8000bcc:	442b      	add	r3, r5
 8000bce:	6023      	str	r3, [r4, #0]
 8000bd0:	f8d8 3000 	ldr.w	r3, [r8]
 8000bd4:	2b00      	cmp	r3, #0
 8000bd6:	d038      	beq.n	8000c4a <_malloc_r+0xf6>
 8000bd8:	685a      	ldr	r2, [r3, #4]
 8000bda:	42a2      	cmp	r2, r4
 8000bdc:	d12b      	bne.n	8000c36 <_malloc_r+0xe2>
 8000bde:	2200      	movs	r2, #0
 8000be0:	605a      	str	r2, [r3, #4]
 8000be2:	e00f      	b.n	8000c04 <_malloc_r+0xb0>
 8000be4:	6822      	ldr	r2, [r4, #0]
 8000be6:	1b52      	subs	r2, r2, r5
 8000be8:	d41f      	bmi.n	8000c2a <_malloc_r+0xd6>
 8000bea:	2a0b      	cmp	r2, #11
 8000bec:	d917      	bls.n	8000c1e <_malloc_r+0xca>
 8000bee:	1961      	adds	r1, r4, r5
 8000bf0:	42a3      	cmp	r3, r4
 8000bf2:	6025      	str	r5, [r4, #0]
 8000bf4:	bf18      	it	ne
 8000bf6:	6059      	strne	r1, [r3, #4]
 8000bf8:	6863      	ldr	r3, [r4, #4]
 8000bfa:	bf08      	it	eq
 8000bfc:	f8c8 1000 	streq.w	r1, [r8]
 8000c00:	5162      	str	r2, [r4, r5]
 8000c02:	604b      	str	r3, [r1, #4]
 8000c04:	4638      	mov	r0, r7
 8000c06:	f104 060b 	add.w	r6, r4, #11
 8000c0a:	f000 f829 	bl	8000c60 <__malloc_unlock>
 8000c0e:	f026 0607 	bic.w	r6, r6, #7
 8000c12:	1d23      	adds	r3, r4, #4
 8000c14:	1af2      	subs	r2, r6, r3
 8000c16:	d0ae      	beq.n	8000b76 <_malloc_r+0x22>
 8000c18:	1b9b      	subs	r3, r3, r6
 8000c1a:	50a3      	str	r3, [r4, r2]
 8000c1c:	e7ab      	b.n	8000b76 <_malloc_r+0x22>
 8000c1e:	42a3      	cmp	r3, r4
 8000c20:	6862      	ldr	r2, [r4, #4]
 8000c22:	d1dd      	bne.n	8000be0 <_malloc_r+0x8c>
 8000c24:	f8c8 2000 	str.w	r2, [r8]
 8000c28:	e7ec      	b.n	8000c04 <_malloc_r+0xb0>
 8000c2a:	4623      	mov	r3, r4
 8000c2c:	6864      	ldr	r4, [r4, #4]
 8000c2e:	e7ac      	b.n	8000b8a <_malloc_r+0x36>
 8000c30:	4634      	mov	r4, r6
 8000c32:	6876      	ldr	r6, [r6, #4]
 8000c34:	e7b4      	b.n	8000ba0 <_malloc_r+0x4c>
 8000c36:	4613      	mov	r3, r2
 8000c38:	e7cc      	b.n	8000bd4 <_malloc_r+0x80>
 8000c3a:	230c      	movs	r3, #12
 8000c3c:	603b      	str	r3, [r7, #0]
 8000c3e:	4638      	mov	r0, r7
 8000c40:	f000 f80e 	bl	8000c60 <__malloc_unlock>
 8000c44:	e797      	b.n	8000b76 <_malloc_r+0x22>
 8000c46:	6025      	str	r5, [r4, #0]
 8000c48:	e7dc      	b.n	8000c04 <_malloc_r+0xb0>
 8000c4a:	605b      	str	r3, [r3, #4]
 8000c4c:	deff      	udf	#255	; 0xff
 8000c4e:	bf00      	nop
 8000c50:	200001c0 	.word	0x200001c0

08000c54 <__malloc_lock>:
 8000c54:	4801      	ldr	r0, [pc, #4]	; (8000c5c <__malloc_lock+0x8>)
 8000c56:	f7ff bf10 	b.w	8000a7a <__retarget_lock_acquire_recursive>
 8000c5a:	bf00      	nop
 8000c5c:	200001bc 	.word	0x200001bc

08000c60 <__malloc_unlock>:
 8000c60:	4801      	ldr	r0, [pc, #4]	; (8000c68 <__malloc_unlock+0x8>)
 8000c62:	f7ff bf0b 	b.w	8000a7c <__retarget_lock_release_recursive>
 8000c66:	bf00      	nop
 8000c68:	200001bc 	.word	0x200001bc

08000c6c <__sfputc_r>:
 8000c6c:	6893      	ldr	r3, [r2, #8]
 8000c6e:	3b01      	subs	r3, #1
 8000c70:	2b00      	cmp	r3, #0
 8000c72:	b410      	push	{r4}
 8000c74:	6093      	str	r3, [r2, #8]
 8000c76:	da07      	bge.n	8000c88 <__sfputc_r+0x1c>
 8000c78:	6994      	ldr	r4, [r2, #24]
 8000c7a:	42a3      	cmp	r3, r4
 8000c7c:	db01      	blt.n	8000c82 <__sfputc_r+0x16>
 8000c7e:	290a      	cmp	r1, #10
 8000c80:	d102      	bne.n	8000c88 <__sfputc_r+0x1c>
 8000c82:	bc10      	pop	{r4}
 8000c84:	f7ff bdeb 	b.w	800085e <__swbuf_r>
 8000c88:	6813      	ldr	r3, [r2, #0]
 8000c8a:	1c58      	adds	r0, r3, #1
 8000c8c:	6010      	str	r0, [r2, #0]
 8000c8e:	7019      	strb	r1, [r3, #0]
 8000c90:	4608      	mov	r0, r1
 8000c92:	bc10      	pop	{r4}
 8000c94:	4770      	bx	lr

08000c96 <__sfputs_r>:
 8000c96:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c98:	4606      	mov	r6, r0
 8000c9a:	460f      	mov	r7, r1
 8000c9c:	4614      	mov	r4, r2
 8000c9e:	18d5      	adds	r5, r2, r3
 8000ca0:	42ac      	cmp	r4, r5
 8000ca2:	d101      	bne.n	8000ca8 <__sfputs_r+0x12>
 8000ca4:	2000      	movs	r0, #0
 8000ca6:	e007      	b.n	8000cb8 <__sfputs_r+0x22>
 8000ca8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000cac:	463a      	mov	r2, r7
 8000cae:	4630      	mov	r0, r6
 8000cb0:	f7ff ffdc 	bl	8000c6c <__sfputc_r>
 8000cb4:	1c43      	adds	r3, r0, #1
 8000cb6:	d1f3      	bne.n	8000ca0 <__sfputs_r+0xa>
 8000cb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000cbc <_vfiprintf_r>:
 8000cbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000cc0:	460d      	mov	r5, r1
 8000cc2:	b09d      	sub	sp, #116	; 0x74
 8000cc4:	4614      	mov	r4, r2
 8000cc6:	4698      	mov	r8, r3
 8000cc8:	4606      	mov	r6, r0
 8000cca:	b118      	cbz	r0, 8000cd4 <_vfiprintf_r+0x18>
 8000ccc:	6a03      	ldr	r3, [r0, #32]
 8000cce:	b90b      	cbnz	r3, 8000cd4 <_vfiprintf_r+0x18>
 8000cd0:	f7ff fcde 	bl	8000690 <__sinit>
 8000cd4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000cd6:	07d9      	lsls	r1, r3, #31
 8000cd8:	d405      	bmi.n	8000ce6 <_vfiprintf_r+0x2a>
 8000cda:	89ab      	ldrh	r3, [r5, #12]
 8000cdc:	059a      	lsls	r2, r3, #22
 8000cde:	d402      	bmi.n	8000ce6 <_vfiprintf_r+0x2a>
 8000ce0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000ce2:	f7ff feca 	bl	8000a7a <__retarget_lock_acquire_recursive>
 8000ce6:	89ab      	ldrh	r3, [r5, #12]
 8000ce8:	071b      	lsls	r3, r3, #28
 8000cea:	d501      	bpl.n	8000cf0 <_vfiprintf_r+0x34>
 8000cec:	692b      	ldr	r3, [r5, #16]
 8000cee:	b99b      	cbnz	r3, 8000d18 <_vfiprintf_r+0x5c>
 8000cf0:	4629      	mov	r1, r5
 8000cf2:	4630      	mov	r0, r6
 8000cf4:	f7ff fdf0 	bl	80008d8 <__swsetup_r>
 8000cf8:	b170      	cbz	r0, 8000d18 <_vfiprintf_r+0x5c>
 8000cfa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000cfc:	07dc      	lsls	r4, r3, #31
 8000cfe:	d504      	bpl.n	8000d0a <_vfiprintf_r+0x4e>
 8000d00:	f04f 30ff 	mov.w	r0, #4294967295
 8000d04:	b01d      	add	sp, #116	; 0x74
 8000d06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000d0a:	89ab      	ldrh	r3, [r5, #12]
 8000d0c:	0598      	lsls	r0, r3, #22
 8000d0e:	d4f7      	bmi.n	8000d00 <_vfiprintf_r+0x44>
 8000d10:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000d12:	f7ff feb3 	bl	8000a7c <__retarget_lock_release_recursive>
 8000d16:	e7f3      	b.n	8000d00 <_vfiprintf_r+0x44>
 8000d18:	2300      	movs	r3, #0
 8000d1a:	9309      	str	r3, [sp, #36]	; 0x24
 8000d1c:	2320      	movs	r3, #32
 8000d1e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000d22:	f8cd 800c 	str.w	r8, [sp, #12]
 8000d26:	2330      	movs	r3, #48	; 0x30
 8000d28:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000edc <_vfiprintf_r+0x220>
 8000d2c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000d30:	f04f 0901 	mov.w	r9, #1
 8000d34:	4623      	mov	r3, r4
 8000d36:	469a      	mov	sl, r3
 8000d38:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000d3c:	b10a      	cbz	r2, 8000d42 <_vfiprintf_r+0x86>
 8000d3e:	2a25      	cmp	r2, #37	; 0x25
 8000d40:	d1f9      	bne.n	8000d36 <_vfiprintf_r+0x7a>
 8000d42:	ebba 0b04 	subs.w	fp, sl, r4
 8000d46:	d00b      	beq.n	8000d60 <_vfiprintf_r+0xa4>
 8000d48:	465b      	mov	r3, fp
 8000d4a:	4622      	mov	r2, r4
 8000d4c:	4629      	mov	r1, r5
 8000d4e:	4630      	mov	r0, r6
 8000d50:	f7ff ffa1 	bl	8000c96 <__sfputs_r>
 8000d54:	3001      	adds	r0, #1
 8000d56:	f000 80a9 	beq.w	8000eac <_vfiprintf_r+0x1f0>
 8000d5a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000d5c:	445a      	add	r2, fp
 8000d5e:	9209      	str	r2, [sp, #36]	; 0x24
 8000d60:	f89a 3000 	ldrb.w	r3, [sl]
 8000d64:	2b00      	cmp	r3, #0
 8000d66:	f000 80a1 	beq.w	8000eac <_vfiprintf_r+0x1f0>
 8000d6a:	2300      	movs	r3, #0
 8000d6c:	f04f 32ff 	mov.w	r2, #4294967295
 8000d70:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000d74:	f10a 0a01 	add.w	sl, sl, #1
 8000d78:	9304      	str	r3, [sp, #16]
 8000d7a:	9307      	str	r3, [sp, #28]
 8000d7c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000d80:	931a      	str	r3, [sp, #104]	; 0x68
 8000d82:	4654      	mov	r4, sl
 8000d84:	2205      	movs	r2, #5
 8000d86:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d8a:	4854      	ldr	r0, [pc, #336]	; (8000edc <_vfiprintf_r+0x220>)
 8000d8c:	f7ff fa40 	bl	8000210 <memchr>
 8000d90:	9a04      	ldr	r2, [sp, #16]
 8000d92:	b9d8      	cbnz	r0, 8000dcc <_vfiprintf_r+0x110>
 8000d94:	06d1      	lsls	r1, r2, #27
 8000d96:	bf44      	itt	mi
 8000d98:	2320      	movmi	r3, #32
 8000d9a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000d9e:	0713      	lsls	r3, r2, #28
 8000da0:	bf44      	itt	mi
 8000da2:	232b      	movmi	r3, #43	; 0x2b
 8000da4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000da8:	f89a 3000 	ldrb.w	r3, [sl]
 8000dac:	2b2a      	cmp	r3, #42	; 0x2a
 8000dae:	d015      	beq.n	8000ddc <_vfiprintf_r+0x120>
 8000db0:	9a07      	ldr	r2, [sp, #28]
 8000db2:	4654      	mov	r4, sl
 8000db4:	2000      	movs	r0, #0
 8000db6:	f04f 0c0a 	mov.w	ip, #10
 8000dba:	4621      	mov	r1, r4
 8000dbc:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000dc0:	3b30      	subs	r3, #48	; 0x30
 8000dc2:	2b09      	cmp	r3, #9
 8000dc4:	d94d      	bls.n	8000e62 <_vfiprintf_r+0x1a6>
 8000dc6:	b1b0      	cbz	r0, 8000df6 <_vfiprintf_r+0x13a>
 8000dc8:	9207      	str	r2, [sp, #28]
 8000dca:	e014      	b.n	8000df6 <_vfiprintf_r+0x13a>
 8000dcc:	eba0 0308 	sub.w	r3, r0, r8
 8000dd0:	fa09 f303 	lsl.w	r3, r9, r3
 8000dd4:	4313      	orrs	r3, r2
 8000dd6:	9304      	str	r3, [sp, #16]
 8000dd8:	46a2      	mov	sl, r4
 8000dda:	e7d2      	b.n	8000d82 <_vfiprintf_r+0xc6>
 8000ddc:	9b03      	ldr	r3, [sp, #12]
 8000dde:	1d19      	adds	r1, r3, #4
 8000de0:	681b      	ldr	r3, [r3, #0]
 8000de2:	9103      	str	r1, [sp, #12]
 8000de4:	2b00      	cmp	r3, #0
 8000de6:	bfbb      	ittet	lt
 8000de8:	425b      	neglt	r3, r3
 8000dea:	f042 0202 	orrlt.w	r2, r2, #2
 8000dee:	9307      	strge	r3, [sp, #28]
 8000df0:	9307      	strlt	r3, [sp, #28]
 8000df2:	bfb8      	it	lt
 8000df4:	9204      	strlt	r2, [sp, #16]
 8000df6:	7823      	ldrb	r3, [r4, #0]
 8000df8:	2b2e      	cmp	r3, #46	; 0x2e
 8000dfa:	d10c      	bne.n	8000e16 <_vfiprintf_r+0x15a>
 8000dfc:	7863      	ldrb	r3, [r4, #1]
 8000dfe:	2b2a      	cmp	r3, #42	; 0x2a
 8000e00:	d134      	bne.n	8000e6c <_vfiprintf_r+0x1b0>
 8000e02:	9b03      	ldr	r3, [sp, #12]
 8000e04:	1d1a      	adds	r2, r3, #4
 8000e06:	681b      	ldr	r3, [r3, #0]
 8000e08:	9203      	str	r2, [sp, #12]
 8000e0a:	2b00      	cmp	r3, #0
 8000e0c:	bfb8      	it	lt
 8000e0e:	f04f 33ff 	movlt.w	r3, #4294967295
 8000e12:	3402      	adds	r4, #2
 8000e14:	9305      	str	r3, [sp, #20]
 8000e16:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8000ee0 <_vfiprintf_r+0x224>
 8000e1a:	7821      	ldrb	r1, [r4, #0]
 8000e1c:	2203      	movs	r2, #3
 8000e1e:	4650      	mov	r0, sl
 8000e20:	f7ff f9f6 	bl	8000210 <memchr>
 8000e24:	b138      	cbz	r0, 8000e36 <_vfiprintf_r+0x17a>
 8000e26:	9b04      	ldr	r3, [sp, #16]
 8000e28:	eba0 000a 	sub.w	r0, r0, sl
 8000e2c:	2240      	movs	r2, #64	; 0x40
 8000e2e:	4082      	lsls	r2, r0
 8000e30:	4313      	orrs	r3, r2
 8000e32:	3401      	adds	r4, #1
 8000e34:	9304      	str	r3, [sp, #16]
 8000e36:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e3a:	482a      	ldr	r0, [pc, #168]	; (8000ee4 <_vfiprintf_r+0x228>)
 8000e3c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000e40:	2206      	movs	r2, #6
 8000e42:	f7ff f9e5 	bl	8000210 <memchr>
 8000e46:	2800      	cmp	r0, #0
 8000e48:	d03f      	beq.n	8000eca <_vfiprintf_r+0x20e>
 8000e4a:	4b27      	ldr	r3, [pc, #156]	; (8000ee8 <_vfiprintf_r+0x22c>)
 8000e4c:	bb1b      	cbnz	r3, 8000e96 <_vfiprintf_r+0x1da>
 8000e4e:	9b03      	ldr	r3, [sp, #12]
 8000e50:	3307      	adds	r3, #7
 8000e52:	f023 0307 	bic.w	r3, r3, #7
 8000e56:	3308      	adds	r3, #8
 8000e58:	9303      	str	r3, [sp, #12]
 8000e5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000e5c:	443b      	add	r3, r7
 8000e5e:	9309      	str	r3, [sp, #36]	; 0x24
 8000e60:	e768      	b.n	8000d34 <_vfiprintf_r+0x78>
 8000e62:	fb0c 3202 	mla	r2, ip, r2, r3
 8000e66:	460c      	mov	r4, r1
 8000e68:	2001      	movs	r0, #1
 8000e6a:	e7a6      	b.n	8000dba <_vfiprintf_r+0xfe>
 8000e6c:	2300      	movs	r3, #0
 8000e6e:	3401      	adds	r4, #1
 8000e70:	9305      	str	r3, [sp, #20]
 8000e72:	4619      	mov	r1, r3
 8000e74:	f04f 0c0a 	mov.w	ip, #10
 8000e78:	4620      	mov	r0, r4
 8000e7a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000e7e:	3a30      	subs	r2, #48	; 0x30
 8000e80:	2a09      	cmp	r2, #9
 8000e82:	d903      	bls.n	8000e8c <_vfiprintf_r+0x1d0>
 8000e84:	2b00      	cmp	r3, #0
 8000e86:	d0c6      	beq.n	8000e16 <_vfiprintf_r+0x15a>
 8000e88:	9105      	str	r1, [sp, #20]
 8000e8a:	e7c4      	b.n	8000e16 <_vfiprintf_r+0x15a>
 8000e8c:	fb0c 2101 	mla	r1, ip, r1, r2
 8000e90:	4604      	mov	r4, r0
 8000e92:	2301      	movs	r3, #1
 8000e94:	e7f0      	b.n	8000e78 <_vfiprintf_r+0x1bc>
 8000e96:	ab03      	add	r3, sp, #12
 8000e98:	9300      	str	r3, [sp, #0]
 8000e9a:	462a      	mov	r2, r5
 8000e9c:	4b13      	ldr	r3, [pc, #76]	; (8000eec <_vfiprintf_r+0x230>)
 8000e9e:	a904      	add	r1, sp, #16
 8000ea0:	4630      	mov	r0, r6
 8000ea2:	f3af 8000 	nop.w
 8000ea6:	4607      	mov	r7, r0
 8000ea8:	1c78      	adds	r0, r7, #1
 8000eaa:	d1d6      	bne.n	8000e5a <_vfiprintf_r+0x19e>
 8000eac:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000eae:	07d9      	lsls	r1, r3, #31
 8000eb0:	d405      	bmi.n	8000ebe <_vfiprintf_r+0x202>
 8000eb2:	89ab      	ldrh	r3, [r5, #12]
 8000eb4:	059a      	lsls	r2, r3, #22
 8000eb6:	d402      	bmi.n	8000ebe <_vfiprintf_r+0x202>
 8000eb8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000eba:	f7ff fddf 	bl	8000a7c <__retarget_lock_release_recursive>
 8000ebe:	89ab      	ldrh	r3, [r5, #12]
 8000ec0:	065b      	lsls	r3, r3, #25
 8000ec2:	f53f af1d 	bmi.w	8000d00 <_vfiprintf_r+0x44>
 8000ec6:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000ec8:	e71c      	b.n	8000d04 <_vfiprintf_r+0x48>
 8000eca:	ab03      	add	r3, sp, #12
 8000ecc:	9300      	str	r3, [sp, #0]
 8000ece:	462a      	mov	r2, r5
 8000ed0:	4b06      	ldr	r3, [pc, #24]	; (8000eec <_vfiprintf_r+0x230>)
 8000ed2:	a904      	add	r1, sp, #16
 8000ed4:	4630      	mov	r0, r6
 8000ed6:	f000 f879 	bl	8000fcc <_printf_i>
 8000eda:	e7e4      	b.n	8000ea6 <_vfiprintf_r+0x1ea>
 8000edc:	08001527 	.word	0x08001527
 8000ee0:	0800152d 	.word	0x0800152d
 8000ee4:	08001531 	.word	0x08001531
 8000ee8:	00000000 	.word	0x00000000
 8000eec:	08000c97 	.word	0x08000c97

08000ef0 <_printf_common>:
 8000ef0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ef4:	4616      	mov	r6, r2
 8000ef6:	4699      	mov	r9, r3
 8000ef8:	688a      	ldr	r2, [r1, #8]
 8000efa:	690b      	ldr	r3, [r1, #16]
 8000efc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000f00:	4293      	cmp	r3, r2
 8000f02:	bfb8      	it	lt
 8000f04:	4613      	movlt	r3, r2
 8000f06:	6033      	str	r3, [r6, #0]
 8000f08:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000f0c:	4607      	mov	r7, r0
 8000f0e:	460c      	mov	r4, r1
 8000f10:	b10a      	cbz	r2, 8000f16 <_printf_common+0x26>
 8000f12:	3301      	adds	r3, #1
 8000f14:	6033      	str	r3, [r6, #0]
 8000f16:	6823      	ldr	r3, [r4, #0]
 8000f18:	0699      	lsls	r1, r3, #26
 8000f1a:	bf42      	ittt	mi
 8000f1c:	6833      	ldrmi	r3, [r6, #0]
 8000f1e:	3302      	addmi	r3, #2
 8000f20:	6033      	strmi	r3, [r6, #0]
 8000f22:	6825      	ldr	r5, [r4, #0]
 8000f24:	f015 0506 	ands.w	r5, r5, #6
 8000f28:	d106      	bne.n	8000f38 <_printf_common+0x48>
 8000f2a:	f104 0a19 	add.w	sl, r4, #25
 8000f2e:	68e3      	ldr	r3, [r4, #12]
 8000f30:	6832      	ldr	r2, [r6, #0]
 8000f32:	1a9b      	subs	r3, r3, r2
 8000f34:	42ab      	cmp	r3, r5
 8000f36:	dc26      	bgt.n	8000f86 <_printf_common+0x96>
 8000f38:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000f3c:	1e13      	subs	r3, r2, #0
 8000f3e:	6822      	ldr	r2, [r4, #0]
 8000f40:	bf18      	it	ne
 8000f42:	2301      	movne	r3, #1
 8000f44:	0692      	lsls	r2, r2, #26
 8000f46:	d42b      	bmi.n	8000fa0 <_printf_common+0xb0>
 8000f48:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000f4c:	4649      	mov	r1, r9
 8000f4e:	4638      	mov	r0, r7
 8000f50:	47c0      	blx	r8
 8000f52:	3001      	adds	r0, #1
 8000f54:	d01e      	beq.n	8000f94 <_printf_common+0xa4>
 8000f56:	6823      	ldr	r3, [r4, #0]
 8000f58:	6922      	ldr	r2, [r4, #16]
 8000f5a:	f003 0306 	and.w	r3, r3, #6
 8000f5e:	2b04      	cmp	r3, #4
 8000f60:	bf02      	ittt	eq
 8000f62:	68e5      	ldreq	r5, [r4, #12]
 8000f64:	6833      	ldreq	r3, [r6, #0]
 8000f66:	1aed      	subeq	r5, r5, r3
 8000f68:	68a3      	ldr	r3, [r4, #8]
 8000f6a:	bf0c      	ite	eq
 8000f6c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000f70:	2500      	movne	r5, #0
 8000f72:	4293      	cmp	r3, r2
 8000f74:	bfc4      	itt	gt
 8000f76:	1a9b      	subgt	r3, r3, r2
 8000f78:	18ed      	addgt	r5, r5, r3
 8000f7a:	2600      	movs	r6, #0
 8000f7c:	341a      	adds	r4, #26
 8000f7e:	42b5      	cmp	r5, r6
 8000f80:	d11a      	bne.n	8000fb8 <_printf_common+0xc8>
 8000f82:	2000      	movs	r0, #0
 8000f84:	e008      	b.n	8000f98 <_printf_common+0xa8>
 8000f86:	2301      	movs	r3, #1
 8000f88:	4652      	mov	r2, sl
 8000f8a:	4649      	mov	r1, r9
 8000f8c:	4638      	mov	r0, r7
 8000f8e:	47c0      	blx	r8
 8000f90:	3001      	adds	r0, #1
 8000f92:	d103      	bne.n	8000f9c <_printf_common+0xac>
 8000f94:	f04f 30ff 	mov.w	r0, #4294967295
 8000f98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f9c:	3501      	adds	r5, #1
 8000f9e:	e7c6      	b.n	8000f2e <_printf_common+0x3e>
 8000fa0:	18e1      	adds	r1, r4, r3
 8000fa2:	1c5a      	adds	r2, r3, #1
 8000fa4:	2030      	movs	r0, #48	; 0x30
 8000fa6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000faa:	4422      	add	r2, r4
 8000fac:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000fb0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000fb4:	3302      	adds	r3, #2
 8000fb6:	e7c7      	b.n	8000f48 <_printf_common+0x58>
 8000fb8:	2301      	movs	r3, #1
 8000fba:	4622      	mov	r2, r4
 8000fbc:	4649      	mov	r1, r9
 8000fbe:	4638      	mov	r0, r7
 8000fc0:	47c0      	blx	r8
 8000fc2:	3001      	adds	r0, #1
 8000fc4:	d0e6      	beq.n	8000f94 <_printf_common+0xa4>
 8000fc6:	3601      	adds	r6, #1
 8000fc8:	e7d9      	b.n	8000f7e <_printf_common+0x8e>
	...

08000fcc <_printf_i>:
 8000fcc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000fd0:	7e0f      	ldrb	r7, [r1, #24]
 8000fd2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000fd4:	2f78      	cmp	r7, #120	; 0x78
 8000fd6:	4691      	mov	r9, r2
 8000fd8:	4680      	mov	r8, r0
 8000fda:	460c      	mov	r4, r1
 8000fdc:	469a      	mov	sl, r3
 8000fde:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000fe2:	d807      	bhi.n	8000ff4 <_printf_i+0x28>
 8000fe4:	2f62      	cmp	r7, #98	; 0x62
 8000fe6:	d80a      	bhi.n	8000ffe <_printf_i+0x32>
 8000fe8:	2f00      	cmp	r7, #0
 8000fea:	f000 80d4 	beq.w	8001196 <_printf_i+0x1ca>
 8000fee:	2f58      	cmp	r7, #88	; 0x58
 8000ff0:	f000 80c0 	beq.w	8001174 <_printf_i+0x1a8>
 8000ff4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000ff8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000ffc:	e03a      	b.n	8001074 <_printf_i+0xa8>
 8000ffe:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001002:	2b15      	cmp	r3, #21
 8001004:	d8f6      	bhi.n	8000ff4 <_printf_i+0x28>
 8001006:	a101      	add	r1, pc, #4	; (adr r1, 800100c <_printf_i+0x40>)
 8001008:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800100c:	08001065 	.word	0x08001065
 8001010:	08001079 	.word	0x08001079
 8001014:	08000ff5 	.word	0x08000ff5
 8001018:	08000ff5 	.word	0x08000ff5
 800101c:	08000ff5 	.word	0x08000ff5
 8001020:	08000ff5 	.word	0x08000ff5
 8001024:	08001079 	.word	0x08001079
 8001028:	08000ff5 	.word	0x08000ff5
 800102c:	08000ff5 	.word	0x08000ff5
 8001030:	08000ff5 	.word	0x08000ff5
 8001034:	08000ff5 	.word	0x08000ff5
 8001038:	0800117d 	.word	0x0800117d
 800103c:	080010a5 	.word	0x080010a5
 8001040:	08001137 	.word	0x08001137
 8001044:	08000ff5 	.word	0x08000ff5
 8001048:	08000ff5 	.word	0x08000ff5
 800104c:	0800119f 	.word	0x0800119f
 8001050:	08000ff5 	.word	0x08000ff5
 8001054:	080010a5 	.word	0x080010a5
 8001058:	08000ff5 	.word	0x08000ff5
 800105c:	08000ff5 	.word	0x08000ff5
 8001060:	0800113f 	.word	0x0800113f
 8001064:	682b      	ldr	r3, [r5, #0]
 8001066:	1d1a      	adds	r2, r3, #4
 8001068:	681b      	ldr	r3, [r3, #0]
 800106a:	602a      	str	r2, [r5, #0]
 800106c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001070:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001074:	2301      	movs	r3, #1
 8001076:	e09f      	b.n	80011b8 <_printf_i+0x1ec>
 8001078:	6820      	ldr	r0, [r4, #0]
 800107a:	682b      	ldr	r3, [r5, #0]
 800107c:	0607      	lsls	r7, r0, #24
 800107e:	f103 0104 	add.w	r1, r3, #4
 8001082:	6029      	str	r1, [r5, #0]
 8001084:	d501      	bpl.n	800108a <_printf_i+0xbe>
 8001086:	681e      	ldr	r6, [r3, #0]
 8001088:	e003      	b.n	8001092 <_printf_i+0xc6>
 800108a:	0646      	lsls	r6, r0, #25
 800108c:	d5fb      	bpl.n	8001086 <_printf_i+0xba>
 800108e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8001092:	2e00      	cmp	r6, #0
 8001094:	da03      	bge.n	800109e <_printf_i+0xd2>
 8001096:	232d      	movs	r3, #45	; 0x2d
 8001098:	4276      	negs	r6, r6
 800109a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800109e:	485a      	ldr	r0, [pc, #360]	; (8001208 <_printf_i+0x23c>)
 80010a0:	230a      	movs	r3, #10
 80010a2:	e012      	b.n	80010ca <_printf_i+0xfe>
 80010a4:	682b      	ldr	r3, [r5, #0]
 80010a6:	6820      	ldr	r0, [r4, #0]
 80010a8:	1d19      	adds	r1, r3, #4
 80010aa:	6029      	str	r1, [r5, #0]
 80010ac:	0605      	lsls	r5, r0, #24
 80010ae:	d501      	bpl.n	80010b4 <_printf_i+0xe8>
 80010b0:	681e      	ldr	r6, [r3, #0]
 80010b2:	e002      	b.n	80010ba <_printf_i+0xee>
 80010b4:	0641      	lsls	r1, r0, #25
 80010b6:	d5fb      	bpl.n	80010b0 <_printf_i+0xe4>
 80010b8:	881e      	ldrh	r6, [r3, #0]
 80010ba:	4853      	ldr	r0, [pc, #332]	; (8001208 <_printf_i+0x23c>)
 80010bc:	2f6f      	cmp	r7, #111	; 0x6f
 80010be:	bf0c      	ite	eq
 80010c0:	2308      	moveq	r3, #8
 80010c2:	230a      	movne	r3, #10
 80010c4:	2100      	movs	r1, #0
 80010c6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80010ca:	6865      	ldr	r5, [r4, #4]
 80010cc:	60a5      	str	r5, [r4, #8]
 80010ce:	2d00      	cmp	r5, #0
 80010d0:	bfa2      	ittt	ge
 80010d2:	6821      	ldrge	r1, [r4, #0]
 80010d4:	f021 0104 	bicge.w	r1, r1, #4
 80010d8:	6021      	strge	r1, [r4, #0]
 80010da:	b90e      	cbnz	r6, 80010e0 <_printf_i+0x114>
 80010dc:	2d00      	cmp	r5, #0
 80010de:	d04b      	beq.n	8001178 <_printf_i+0x1ac>
 80010e0:	4615      	mov	r5, r2
 80010e2:	fbb6 f1f3 	udiv	r1, r6, r3
 80010e6:	fb03 6711 	mls	r7, r3, r1, r6
 80010ea:	5dc7      	ldrb	r7, [r0, r7]
 80010ec:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80010f0:	4637      	mov	r7, r6
 80010f2:	42bb      	cmp	r3, r7
 80010f4:	460e      	mov	r6, r1
 80010f6:	d9f4      	bls.n	80010e2 <_printf_i+0x116>
 80010f8:	2b08      	cmp	r3, #8
 80010fa:	d10b      	bne.n	8001114 <_printf_i+0x148>
 80010fc:	6823      	ldr	r3, [r4, #0]
 80010fe:	07de      	lsls	r6, r3, #31
 8001100:	d508      	bpl.n	8001114 <_printf_i+0x148>
 8001102:	6923      	ldr	r3, [r4, #16]
 8001104:	6861      	ldr	r1, [r4, #4]
 8001106:	4299      	cmp	r1, r3
 8001108:	bfde      	ittt	le
 800110a:	2330      	movle	r3, #48	; 0x30
 800110c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001110:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001114:	1b52      	subs	r2, r2, r5
 8001116:	6122      	str	r2, [r4, #16]
 8001118:	f8cd a000 	str.w	sl, [sp]
 800111c:	464b      	mov	r3, r9
 800111e:	aa03      	add	r2, sp, #12
 8001120:	4621      	mov	r1, r4
 8001122:	4640      	mov	r0, r8
 8001124:	f7ff fee4 	bl	8000ef0 <_printf_common>
 8001128:	3001      	adds	r0, #1
 800112a:	d14a      	bne.n	80011c2 <_printf_i+0x1f6>
 800112c:	f04f 30ff 	mov.w	r0, #4294967295
 8001130:	b004      	add	sp, #16
 8001132:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001136:	6823      	ldr	r3, [r4, #0]
 8001138:	f043 0320 	orr.w	r3, r3, #32
 800113c:	6023      	str	r3, [r4, #0]
 800113e:	4833      	ldr	r0, [pc, #204]	; (800120c <_printf_i+0x240>)
 8001140:	2778      	movs	r7, #120	; 0x78
 8001142:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8001146:	6823      	ldr	r3, [r4, #0]
 8001148:	6829      	ldr	r1, [r5, #0]
 800114a:	061f      	lsls	r7, r3, #24
 800114c:	f851 6b04 	ldr.w	r6, [r1], #4
 8001150:	d402      	bmi.n	8001158 <_printf_i+0x18c>
 8001152:	065f      	lsls	r7, r3, #25
 8001154:	bf48      	it	mi
 8001156:	b2b6      	uxthmi	r6, r6
 8001158:	07df      	lsls	r7, r3, #31
 800115a:	bf48      	it	mi
 800115c:	f043 0320 	orrmi.w	r3, r3, #32
 8001160:	6029      	str	r1, [r5, #0]
 8001162:	bf48      	it	mi
 8001164:	6023      	strmi	r3, [r4, #0]
 8001166:	b91e      	cbnz	r6, 8001170 <_printf_i+0x1a4>
 8001168:	6823      	ldr	r3, [r4, #0]
 800116a:	f023 0320 	bic.w	r3, r3, #32
 800116e:	6023      	str	r3, [r4, #0]
 8001170:	2310      	movs	r3, #16
 8001172:	e7a7      	b.n	80010c4 <_printf_i+0xf8>
 8001174:	4824      	ldr	r0, [pc, #144]	; (8001208 <_printf_i+0x23c>)
 8001176:	e7e4      	b.n	8001142 <_printf_i+0x176>
 8001178:	4615      	mov	r5, r2
 800117a:	e7bd      	b.n	80010f8 <_printf_i+0x12c>
 800117c:	682b      	ldr	r3, [r5, #0]
 800117e:	6826      	ldr	r6, [r4, #0]
 8001180:	6961      	ldr	r1, [r4, #20]
 8001182:	1d18      	adds	r0, r3, #4
 8001184:	6028      	str	r0, [r5, #0]
 8001186:	0635      	lsls	r5, r6, #24
 8001188:	681b      	ldr	r3, [r3, #0]
 800118a:	d501      	bpl.n	8001190 <_printf_i+0x1c4>
 800118c:	6019      	str	r1, [r3, #0]
 800118e:	e002      	b.n	8001196 <_printf_i+0x1ca>
 8001190:	0670      	lsls	r0, r6, #25
 8001192:	d5fb      	bpl.n	800118c <_printf_i+0x1c0>
 8001194:	8019      	strh	r1, [r3, #0]
 8001196:	2300      	movs	r3, #0
 8001198:	6123      	str	r3, [r4, #16]
 800119a:	4615      	mov	r5, r2
 800119c:	e7bc      	b.n	8001118 <_printf_i+0x14c>
 800119e:	682b      	ldr	r3, [r5, #0]
 80011a0:	1d1a      	adds	r2, r3, #4
 80011a2:	602a      	str	r2, [r5, #0]
 80011a4:	681d      	ldr	r5, [r3, #0]
 80011a6:	6862      	ldr	r2, [r4, #4]
 80011a8:	2100      	movs	r1, #0
 80011aa:	4628      	mov	r0, r5
 80011ac:	f7ff f830 	bl	8000210 <memchr>
 80011b0:	b108      	cbz	r0, 80011b6 <_printf_i+0x1ea>
 80011b2:	1b40      	subs	r0, r0, r5
 80011b4:	6060      	str	r0, [r4, #4]
 80011b6:	6863      	ldr	r3, [r4, #4]
 80011b8:	6123      	str	r3, [r4, #16]
 80011ba:	2300      	movs	r3, #0
 80011bc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80011c0:	e7aa      	b.n	8001118 <_printf_i+0x14c>
 80011c2:	6923      	ldr	r3, [r4, #16]
 80011c4:	462a      	mov	r2, r5
 80011c6:	4649      	mov	r1, r9
 80011c8:	4640      	mov	r0, r8
 80011ca:	47d0      	blx	sl
 80011cc:	3001      	adds	r0, #1
 80011ce:	d0ad      	beq.n	800112c <_printf_i+0x160>
 80011d0:	6823      	ldr	r3, [r4, #0]
 80011d2:	079b      	lsls	r3, r3, #30
 80011d4:	d413      	bmi.n	80011fe <_printf_i+0x232>
 80011d6:	68e0      	ldr	r0, [r4, #12]
 80011d8:	9b03      	ldr	r3, [sp, #12]
 80011da:	4298      	cmp	r0, r3
 80011dc:	bfb8      	it	lt
 80011de:	4618      	movlt	r0, r3
 80011e0:	e7a6      	b.n	8001130 <_printf_i+0x164>
 80011e2:	2301      	movs	r3, #1
 80011e4:	4632      	mov	r2, r6
 80011e6:	4649      	mov	r1, r9
 80011e8:	4640      	mov	r0, r8
 80011ea:	47d0      	blx	sl
 80011ec:	3001      	adds	r0, #1
 80011ee:	d09d      	beq.n	800112c <_printf_i+0x160>
 80011f0:	3501      	adds	r5, #1
 80011f2:	68e3      	ldr	r3, [r4, #12]
 80011f4:	9903      	ldr	r1, [sp, #12]
 80011f6:	1a5b      	subs	r3, r3, r1
 80011f8:	42ab      	cmp	r3, r5
 80011fa:	dcf2      	bgt.n	80011e2 <_printf_i+0x216>
 80011fc:	e7eb      	b.n	80011d6 <_printf_i+0x20a>
 80011fe:	2500      	movs	r5, #0
 8001200:	f104 0619 	add.w	r6, r4, #25
 8001204:	e7f5      	b.n	80011f2 <_printf_i+0x226>
 8001206:	bf00      	nop
 8001208:	08001538 	.word	0x08001538
 800120c:	08001549 	.word	0x08001549

08001210 <__sflush_r>:
 8001210:	898a      	ldrh	r2, [r1, #12]
 8001212:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001214:	4605      	mov	r5, r0
 8001216:	0710      	lsls	r0, r2, #28
 8001218:	460c      	mov	r4, r1
 800121a:	d457      	bmi.n	80012cc <__sflush_r+0xbc>
 800121c:	684b      	ldr	r3, [r1, #4]
 800121e:	2b00      	cmp	r3, #0
 8001220:	dc04      	bgt.n	800122c <__sflush_r+0x1c>
 8001222:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001224:	2b00      	cmp	r3, #0
 8001226:	dc01      	bgt.n	800122c <__sflush_r+0x1c>
 8001228:	2000      	movs	r0, #0
 800122a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800122c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800122e:	2e00      	cmp	r6, #0
 8001230:	d0fa      	beq.n	8001228 <__sflush_r+0x18>
 8001232:	2300      	movs	r3, #0
 8001234:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001238:	682f      	ldr	r7, [r5, #0]
 800123a:	6a21      	ldr	r1, [r4, #32]
 800123c:	602b      	str	r3, [r5, #0]
 800123e:	d032      	beq.n	80012a6 <__sflush_r+0x96>
 8001240:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001242:	89a3      	ldrh	r3, [r4, #12]
 8001244:	075a      	lsls	r2, r3, #29
 8001246:	d505      	bpl.n	8001254 <__sflush_r+0x44>
 8001248:	6863      	ldr	r3, [r4, #4]
 800124a:	1ac0      	subs	r0, r0, r3
 800124c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800124e:	b10b      	cbz	r3, 8001254 <__sflush_r+0x44>
 8001250:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001252:	1ac0      	subs	r0, r0, r3
 8001254:	2300      	movs	r3, #0
 8001256:	4602      	mov	r2, r0
 8001258:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800125a:	6a21      	ldr	r1, [r4, #32]
 800125c:	4628      	mov	r0, r5
 800125e:	47b0      	blx	r6
 8001260:	1c43      	adds	r3, r0, #1
 8001262:	89a3      	ldrh	r3, [r4, #12]
 8001264:	d106      	bne.n	8001274 <__sflush_r+0x64>
 8001266:	6829      	ldr	r1, [r5, #0]
 8001268:	291d      	cmp	r1, #29
 800126a:	d82b      	bhi.n	80012c4 <__sflush_r+0xb4>
 800126c:	4a28      	ldr	r2, [pc, #160]	; (8001310 <__sflush_r+0x100>)
 800126e:	410a      	asrs	r2, r1
 8001270:	07d6      	lsls	r6, r2, #31
 8001272:	d427      	bmi.n	80012c4 <__sflush_r+0xb4>
 8001274:	2200      	movs	r2, #0
 8001276:	6062      	str	r2, [r4, #4]
 8001278:	04d9      	lsls	r1, r3, #19
 800127a:	6922      	ldr	r2, [r4, #16]
 800127c:	6022      	str	r2, [r4, #0]
 800127e:	d504      	bpl.n	800128a <__sflush_r+0x7a>
 8001280:	1c42      	adds	r2, r0, #1
 8001282:	d101      	bne.n	8001288 <__sflush_r+0x78>
 8001284:	682b      	ldr	r3, [r5, #0]
 8001286:	b903      	cbnz	r3, 800128a <__sflush_r+0x7a>
 8001288:	6560      	str	r0, [r4, #84]	; 0x54
 800128a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800128c:	602f      	str	r7, [r5, #0]
 800128e:	2900      	cmp	r1, #0
 8001290:	d0ca      	beq.n	8001228 <__sflush_r+0x18>
 8001292:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001296:	4299      	cmp	r1, r3
 8001298:	d002      	beq.n	80012a0 <__sflush_r+0x90>
 800129a:	4628      	mov	r0, r5
 800129c:	f7ff fbf0 	bl	8000a80 <_free_r>
 80012a0:	2000      	movs	r0, #0
 80012a2:	6360      	str	r0, [r4, #52]	; 0x34
 80012a4:	e7c1      	b.n	800122a <__sflush_r+0x1a>
 80012a6:	2301      	movs	r3, #1
 80012a8:	4628      	mov	r0, r5
 80012aa:	47b0      	blx	r6
 80012ac:	1c41      	adds	r1, r0, #1
 80012ae:	d1c8      	bne.n	8001242 <__sflush_r+0x32>
 80012b0:	682b      	ldr	r3, [r5, #0]
 80012b2:	2b00      	cmp	r3, #0
 80012b4:	d0c5      	beq.n	8001242 <__sflush_r+0x32>
 80012b6:	2b1d      	cmp	r3, #29
 80012b8:	d001      	beq.n	80012be <__sflush_r+0xae>
 80012ba:	2b16      	cmp	r3, #22
 80012bc:	d101      	bne.n	80012c2 <__sflush_r+0xb2>
 80012be:	602f      	str	r7, [r5, #0]
 80012c0:	e7b2      	b.n	8001228 <__sflush_r+0x18>
 80012c2:	89a3      	ldrh	r3, [r4, #12]
 80012c4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80012c8:	81a3      	strh	r3, [r4, #12]
 80012ca:	e7ae      	b.n	800122a <__sflush_r+0x1a>
 80012cc:	690f      	ldr	r7, [r1, #16]
 80012ce:	2f00      	cmp	r7, #0
 80012d0:	d0aa      	beq.n	8001228 <__sflush_r+0x18>
 80012d2:	0793      	lsls	r3, r2, #30
 80012d4:	680e      	ldr	r6, [r1, #0]
 80012d6:	bf08      	it	eq
 80012d8:	694b      	ldreq	r3, [r1, #20]
 80012da:	600f      	str	r7, [r1, #0]
 80012dc:	bf18      	it	ne
 80012de:	2300      	movne	r3, #0
 80012e0:	1bf6      	subs	r6, r6, r7
 80012e2:	608b      	str	r3, [r1, #8]
 80012e4:	2e00      	cmp	r6, #0
 80012e6:	dd9f      	ble.n	8001228 <__sflush_r+0x18>
 80012e8:	6a21      	ldr	r1, [r4, #32]
 80012ea:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 80012ee:	4633      	mov	r3, r6
 80012f0:	463a      	mov	r2, r7
 80012f2:	4628      	mov	r0, r5
 80012f4:	47e0      	blx	ip
 80012f6:	2800      	cmp	r0, #0
 80012f8:	dc06      	bgt.n	8001308 <__sflush_r+0xf8>
 80012fa:	89a3      	ldrh	r3, [r4, #12]
 80012fc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001300:	81a3      	strh	r3, [r4, #12]
 8001302:	f04f 30ff 	mov.w	r0, #4294967295
 8001306:	e790      	b.n	800122a <__sflush_r+0x1a>
 8001308:	4407      	add	r7, r0
 800130a:	1a36      	subs	r6, r6, r0
 800130c:	e7ea      	b.n	80012e4 <__sflush_r+0xd4>
 800130e:	bf00      	nop
 8001310:	dfbffffe 	.word	0xdfbffffe

08001314 <_fflush_r>:
 8001314:	b538      	push	{r3, r4, r5, lr}
 8001316:	690b      	ldr	r3, [r1, #16]
 8001318:	4605      	mov	r5, r0
 800131a:	460c      	mov	r4, r1
 800131c:	b913      	cbnz	r3, 8001324 <_fflush_r+0x10>
 800131e:	2500      	movs	r5, #0
 8001320:	4628      	mov	r0, r5
 8001322:	bd38      	pop	{r3, r4, r5, pc}
 8001324:	b118      	cbz	r0, 800132e <_fflush_r+0x1a>
 8001326:	6a03      	ldr	r3, [r0, #32]
 8001328:	b90b      	cbnz	r3, 800132e <_fflush_r+0x1a>
 800132a:	f7ff f9b1 	bl	8000690 <__sinit>
 800132e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001332:	2b00      	cmp	r3, #0
 8001334:	d0f3      	beq.n	800131e <_fflush_r+0xa>
 8001336:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001338:	07d0      	lsls	r0, r2, #31
 800133a:	d404      	bmi.n	8001346 <_fflush_r+0x32>
 800133c:	0599      	lsls	r1, r3, #22
 800133e:	d402      	bmi.n	8001346 <_fflush_r+0x32>
 8001340:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001342:	f7ff fb9a 	bl	8000a7a <__retarget_lock_acquire_recursive>
 8001346:	4628      	mov	r0, r5
 8001348:	4621      	mov	r1, r4
 800134a:	f7ff ff61 	bl	8001210 <__sflush_r>
 800134e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001350:	07da      	lsls	r2, r3, #31
 8001352:	4605      	mov	r5, r0
 8001354:	d4e4      	bmi.n	8001320 <_fflush_r+0xc>
 8001356:	89a3      	ldrh	r3, [r4, #12]
 8001358:	059b      	lsls	r3, r3, #22
 800135a:	d4e1      	bmi.n	8001320 <_fflush_r+0xc>
 800135c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800135e:	f7ff fb8d 	bl	8000a7c <__retarget_lock_release_recursive>
 8001362:	e7dd      	b.n	8001320 <_fflush_r+0xc>

08001364 <__swhatbuf_r>:
 8001364:	b570      	push	{r4, r5, r6, lr}
 8001366:	460c      	mov	r4, r1
 8001368:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800136c:	2900      	cmp	r1, #0
 800136e:	b096      	sub	sp, #88	; 0x58
 8001370:	4615      	mov	r5, r2
 8001372:	461e      	mov	r6, r3
 8001374:	da0d      	bge.n	8001392 <__swhatbuf_r+0x2e>
 8001376:	89a3      	ldrh	r3, [r4, #12]
 8001378:	f013 0f80 	tst.w	r3, #128	; 0x80
 800137c:	f04f 0100 	mov.w	r1, #0
 8001380:	bf0c      	ite	eq
 8001382:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8001386:	2340      	movne	r3, #64	; 0x40
 8001388:	2000      	movs	r0, #0
 800138a:	6031      	str	r1, [r6, #0]
 800138c:	602b      	str	r3, [r5, #0]
 800138e:	b016      	add	sp, #88	; 0x58
 8001390:	bd70      	pop	{r4, r5, r6, pc}
 8001392:	466a      	mov	r2, sp
 8001394:	f000 f848 	bl	8001428 <_fstat_r>
 8001398:	2800      	cmp	r0, #0
 800139a:	dbec      	blt.n	8001376 <__swhatbuf_r+0x12>
 800139c:	9901      	ldr	r1, [sp, #4]
 800139e:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80013a2:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80013a6:	4259      	negs	r1, r3
 80013a8:	4159      	adcs	r1, r3
 80013aa:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80013ae:	e7eb      	b.n	8001388 <__swhatbuf_r+0x24>

080013b0 <__smakebuf_r>:
 80013b0:	898b      	ldrh	r3, [r1, #12]
 80013b2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80013b4:	079d      	lsls	r5, r3, #30
 80013b6:	4606      	mov	r6, r0
 80013b8:	460c      	mov	r4, r1
 80013ba:	d507      	bpl.n	80013cc <__smakebuf_r+0x1c>
 80013bc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80013c0:	6023      	str	r3, [r4, #0]
 80013c2:	6123      	str	r3, [r4, #16]
 80013c4:	2301      	movs	r3, #1
 80013c6:	6163      	str	r3, [r4, #20]
 80013c8:	b002      	add	sp, #8
 80013ca:	bd70      	pop	{r4, r5, r6, pc}
 80013cc:	ab01      	add	r3, sp, #4
 80013ce:	466a      	mov	r2, sp
 80013d0:	f7ff ffc8 	bl	8001364 <__swhatbuf_r>
 80013d4:	9900      	ldr	r1, [sp, #0]
 80013d6:	4605      	mov	r5, r0
 80013d8:	4630      	mov	r0, r6
 80013da:	f7ff fbbb 	bl	8000b54 <_malloc_r>
 80013de:	b948      	cbnz	r0, 80013f4 <__smakebuf_r+0x44>
 80013e0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80013e4:	059a      	lsls	r2, r3, #22
 80013e6:	d4ef      	bmi.n	80013c8 <__smakebuf_r+0x18>
 80013e8:	f023 0303 	bic.w	r3, r3, #3
 80013ec:	f043 0302 	orr.w	r3, r3, #2
 80013f0:	81a3      	strh	r3, [r4, #12]
 80013f2:	e7e3      	b.n	80013bc <__smakebuf_r+0xc>
 80013f4:	89a3      	ldrh	r3, [r4, #12]
 80013f6:	6020      	str	r0, [r4, #0]
 80013f8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80013fc:	81a3      	strh	r3, [r4, #12]
 80013fe:	9b00      	ldr	r3, [sp, #0]
 8001400:	6163      	str	r3, [r4, #20]
 8001402:	9b01      	ldr	r3, [sp, #4]
 8001404:	6120      	str	r0, [r4, #16]
 8001406:	b15b      	cbz	r3, 8001420 <__smakebuf_r+0x70>
 8001408:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800140c:	4630      	mov	r0, r6
 800140e:	f000 f81d 	bl	800144c <_isatty_r>
 8001412:	b128      	cbz	r0, 8001420 <__smakebuf_r+0x70>
 8001414:	89a3      	ldrh	r3, [r4, #12]
 8001416:	f023 0303 	bic.w	r3, r3, #3
 800141a:	f043 0301 	orr.w	r3, r3, #1
 800141e:	81a3      	strh	r3, [r4, #12]
 8001420:	89a3      	ldrh	r3, [r4, #12]
 8001422:	431d      	orrs	r5, r3
 8001424:	81a5      	strh	r5, [r4, #12]
 8001426:	e7cf      	b.n	80013c8 <__smakebuf_r+0x18>

08001428 <_fstat_r>:
 8001428:	b538      	push	{r3, r4, r5, lr}
 800142a:	4d07      	ldr	r5, [pc, #28]	; (8001448 <_fstat_r+0x20>)
 800142c:	2300      	movs	r3, #0
 800142e:	4604      	mov	r4, r0
 8001430:	4608      	mov	r0, r1
 8001432:	4611      	mov	r1, r2
 8001434:	602b      	str	r3, [r5, #0]
 8001436:	f7ff f819 	bl	800046c <_fstat>
 800143a:	1c43      	adds	r3, r0, #1
 800143c:	d102      	bne.n	8001444 <_fstat_r+0x1c>
 800143e:	682b      	ldr	r3, [r5, #0]
 8001440:	b103      	cbz	r3, 8001444 <_fstat_r+0x1c>
 8001442:	6023      	str	r3, [r4, #0]
 8001444:	bd38      	pop	{r3, r4, r5, pc}
 8001446:	bf00      	nop
 8001448:	200001b8 	.word	0x200001b8

0800144c <_isatty_r>:
 800144c:	b538      	push	{r3, r4, r5, lr}
 800144e:	4d06      	ldr	r5, [pc, #24]	; (8001468 <_isatty_r+0x1c>)
 8001450:	2300      	movs	r3, #0
 8001452:	4604      	mov	r4, r0
 8001454:	4608      	mov	r0, r1
 8001456:	602b      	str	r3, [r5, #0]
 8001458:	f7ff f817 	bl	800048a <_isatty>
 800145c:	1c43      	adds	r3, r0, #1
 800145e:	d102      	bne.n	8001466 <_isatty_r+0x1a>
 8001460:	682b      	ldr	r3, [r5, #0]
 8001462:	b103      	cbz	r3, 8001466 <_isatty_r+0x1a>
 8001464:	6023      	str	r3, [r4, #0]
 8001466:	bd38      	pop	{r3, r4, r5, pc}
 8001468:	200001b8 	.word	0x200001b8

0800146c <_sbrk_r>:
 800146c:	b538      	push	{r3, r4, r5, lr}
 800146e:	4d06      	ldr	r5, [pc, #24]	; (8001488 <_sbrk_r+0x1c>)
 8001470:	2300      	movs	r3, #0
 8001472:	4604      	mov	r4, r0
 8001474:	4608      	mov	r0, r1
 8001476:	602b      	str	r3, [r5, #0]
 8001478:	f7ff f81e 	bl	80004b8 <_sbrk>
 800147c:	1c43      	adds	r3, r0, #1
 800147e:	d102      	bne.n	8001486 <_sbrk_r+0x1a>
 8001480:	682b      	ldr	r3, [r5, #0]
 8001482:	b103      	cbz	r3, 8001486 <_sbrk_r+0x1a>
 8001484:	6023      	str	r3, [r4, #0]
 8001486:	bd38      	pop	{r3, r4, r5, pc}
 8001488:	200001b8 	.word	0x200001b8

0800148c <_init>:
 800148c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800148e:	bf00      	nop
 8001490:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001492:	bc08      	pop	{r3}
 8001494:	469e      	mov	lr, r3
 8001496:	4770      	bx	lr

08001498 <_fini>:
 8001498:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800149a:	bf00      	nop
 800149c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800149e:	bc08      	pop	{r3}
 80014a0:	469e      	mov	lr, r3
 80014a2:	4770      	bx	lr
